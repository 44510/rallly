{"version":3,"sources":["main.js","templates.js","controllers/about.controller.js","controllers/account.controller.js","controllers/editevent.controller.js","controllers/event.controller.js","controllers/example.controller.js","controllers/home.controller.js","controllers/navigation.controller.js","controllers/newevent.controller.js","controllers/verification.controller.js","directives/backImg.directive.js","directives/datepicker.directive.js","directives/discussion.directive.js","directives/dropdown.directive.js","directives/form.directive.js","directives/poll.directive.js","filters/elapsed.filter.js","services/communicator.service.js","services/modal.service.js","services/notification.service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","otherwise","$injector","$location","$state","get","go","state","url","templateUrl","controller","factory","$resource","id","update","method","verify","destroy","set","title","document","run","$templateCache","put","Title","$scope","ConfirmModal","showNotice","$http","$timeout","Event","Notification","params","event","data","master","copy","e","$watch","value","undoChanges","didChange","JSON","stringify","didChangeDates","dates","submit","form","$valid","message","confirmText","isDestructive","confirm","participants","type","Communicator","isDeleted","trigger","eventUrl","href","_id","absolute","openEvent","isClosed","cancelText","closeEvent","editEvent","date","Date","i","push","add","Math","ceil","random","days","toISOString","examplesNames","examples","length","example","name","votes","j","answer","creator","email","allowNotifications","location","description","emails","comments","author","content","isExample","$save","newEvent","$rootScope","$document","isActive","path","clickHandler","isClickedElementChildOfPopup","element","find","target","console","log","toggleMenu","$on","removeClass","unbind","isOpen","hasClass","addClass","bind","then","code","timeout","directive","scope","attrs","backImg","css","background-image","restrict","require","model","control","link","el","ngModel","newValue","$setViewValue","$validate","$validators","required","modelValue","viewValue","today","activeDate","clone","setMonth","toDate","startDate","moveToFirstDayOfMonth","startDateDOW","getDay","toString","Array","isOutsideMonth","getMonth","isToday","equals","selectDay","dayObj","index","splice","inserted","undefined","compare","parse","returnIndex","modelDate","getDate","getYear","nextMonth","months","prevMonth","removeDate","Comment","controllerAs","comment","participant","this","deleteComment","remove","cid","postComment","commentForm","scrollToBottom","$setPristine","thread","scrollTop","prop","open","toggle","service","emailRegexString","emailRegex","RegExp","prettyError","errors","field","pattern","maxlength","FormHelper","$watchCollection","deleteEvent","setClass","DatePickerService","dateService","init","deregister","unsetDate","$viewChangeListeners","$modelValue","$parsers","time","$isEmpty","$render","Participant","defaults","didVote","pid","edit","indexOf","cancel","save","formnew","discussionCtrl","datesCount","$promise","isTopDate","count","selectedDate","filter","$filter","timeNow","getTime","difference","seconds","floor","minutes","hours","$emit","apply","arguments","mixpanel","track","btfModal","modal","deactivate","activate","close"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('rallly', ['ui.router','ngResource','btford.modal','ngTagsInput','ngAnimate','ngSanitize'])\n    .config(function($stateProvider, $urlRouterProvider, $locationProvider){\n        $locationProvider.html5Mode(true);\n        $urlRouterProvider.otherwise(function($injector, $location){\n            var $state = $injector.get('$state');\n            $state.go('notfound');\n        });\n        $stateProvider\n        .state('newevent',{\n            url : '/new',\n            templateUrl : 'templates/newevent.html',\n            controller : 'NewEventCtrl',\n        })\n        .state('deletedevent',{\n            templateUrl : 'templates/deletedevent.html',\n        })\n        .state('newevent.success', {\n            templateUrl : 'templates/newEvent/success.html'\n        })\n        .state('about', {\n            url : '/about',\n            templateUrl : 'templates/about.html',\n            controller : 'AboutCtrl'\n        })\n        .state('example', {\n            url : '/example',\n            controller : 'ExampleCtrl'\n        })\n        .state('notfound', {\n            templateUrl : 'templates/notfound.html'\n        })\n        .state('event',{\n            url : '/:id',\n            templateUrl : 'templates/event.html',\n            controller : 'EventCtrl'\n        })\n        .state('editevent', {\n            url: '/:id/edit',\n            templateUrl : 'templates/editevent.html',\n            controller : 'EditEventCtrl'\n        })\n        .state('verifyevent', {\n            url : '/verify/:id/code/:code',\n            controller : 'VerificationCtrl'\n        })\n        .state('deleteevent', {\n            url : '/delete/:id/code/:code',\n            controller : 'DeletionCtrl'\n        })\n    })\n    .factory('Event', function($resource){\n        return $resource('/api/event/:id', { id : '@_id' }, {\n            'update' : { method : 'PUT' },\n            'verify' : { method : 'GET', url : '/api/event/:id/code/:code' },\n            'destroy': { method : 'DELETE', url: '/api/event/:id/code/:code' }\n        });\n    })\n    .factory('Participant', function($resource){\n        return $resource('/api/event/:id/participant/:pid', { id: '@_id'}, {\n            'update' : { method : 'PUT' }\n        });\n    })\n    .factory('Comment', function($resource){\n        return $resource('/api/event/:id/comment/:cid', { id : '@_id' }, {\n            'update' : { method : 'PUT' }\n        })\n    })\n    .factory('Title', function(){\n        return {\n            set : function(title){\n                document.title = title;\n            }\n        }\n    });\n","angular.module(\"rallly\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/about.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Frequently Asked Questions</div>\\n    <div class=\\\"box-description\\\">\\n        Want to find out more about Rallly? Check out the FAQs below.\\n    </div>    <h2>What is Rallly?</h2>\\n    <p>\\n        Rallly is a collaborative scheduling service that makes deciding on a date fast and easy. In other words, Rallly helps you and your friends decide on a date to host an event.\\n    </p>\\n    <h2>Why is it called Rallly?</h2>\\n    <p>\\n        The name is derived from the proper spelling of the word, &ldquo;rally&rdquo;. The Webster dictionary defines rally as, &ldquo;to muster for a common purpose&rdquo; which accurately describes the goal of this service. The inproper spelling can be attributed to the difficulty of finding short and meaningful domain names.\\n    </p>\\n    <h2>Who made this?</h2>\\n    <p>\\n        Rallly was created by <a href=\\\"http://lukevella.com\\\">Luke Vella</a>.\\n    </p>\\n</div>\\n\");\n$templateCache.put(\"templates/confirmmodal.html\",\"<div class=\\\"rl-modal-overlay\\\">\\n\\n<div class=\\\"rl-modal-position\\\">\\n\\n    <div class=\\\"rl-modal\\\">\\n        <div class=\\\"rl-modal-title\\\">{{modal.title}}</div>\\n        <div class=\\\"rl-modal-message\\\">\\n            {{modal.message}}\\n        </div>\\n        <div class=\\\"rl-modal-actions\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"modal.confirm()\\\" ng-show=\\\"modal.confirm\\\" class=\\\"btn\\\" ng-class=\\\"{danger : modal.isDestructive}\\\">{{modal.confirmText}}</button>\\n            <button type=\\\"button\\\" ng-click=\\\"modal.cancel()\\\"  class=\\\"btn\\\">{{modal.cancelText}}</button>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/deletedevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-message\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/bin.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Deleted</div>\\n        <div class=\\\"content\\\">\\n            This event has been deleted and is no longer accessible.\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/editevent.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box\\\">\\n\\n        <div class=\\\"box-title\\\">Edit Event</div>\\n        <div class=\\\"box-description\\\">\\n            You can makes changes to your existing event by changing the fields in the form below.\\n        </div>\\n\\n        <form novalidate name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n\\n            <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n            <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <div class=\\\"box-controls box-bottom-sticky\\\">\\n                <button type=\\\"submit\\\" ng-show=\\\"didChange()\\\" class=\\\"btn btn-primary\\\" ng-class=\\\"{disabled : !didChange()}\\\">\\n                    Save Changes\\n                </button>\\n                <button type=\\\"button\\\" ng-click=\\\"undoChanges()\\\" class=\\\"btn\\\" ng-show=\\\"didChange()\\\">Undo Changes</button>\\n                <a href=\\\"/{{event._id}}\\\" class=\\\"btn\\\" ng-hide=\\\"didChange()\\\">Done</a>\\n            </div>\\n\\n        </form>\\n\\n    </div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/event.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box \\\">\\n        <div class=\\\"event-header\\\">\\n            <div class=\\\"details\\\">\\n                <div class=\\\"title\\\">\\n                    {{event.title}}\\n                    <span class=\\\"title-label danger\\\" ng-show=\\\"event.isClosed\\\">Poll Closed</span>\\n                    <span class=\\\"title-label success\\\" ng-hide=\\\"event.isClosed\\\">Poll Open</span>\\n                </div>\\n                <div class=\\\"subtitle\\\">\\n                    Created by <a href=\\\"mailto:{{event.creator.email}}\\\">{{event.creator.name}}</a>\\n                    &bull; {{event.created | elapsed}}\\n                    &bull; <a href=\\\"#\\\" ng-click=\\\"editEvent()\\\">Edit Details</a>\\n                </div>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn\\\" ng-click=\\\"editEvent()\\\">Edit Event</button>\\n            </div>\\n        </div>\\n        <div class=\\\"event-description\\\" ng-if=\\\"event.description\\\" ng-bind-html=\\\"event.description | linky\\\"></div>\\n        <div class=\\\"event-location\\\" ng-if=\\\"event.location\\\">\\n            Location:\\n            <a  href=\\\"http://maps.google.com?q={{event.location}}\\\"  target=\\\"_blank\\\">{{event.location}}</a>\\n        </div>\\n\\n        <div class=\\\"poll-wrapper\\\">\\n            <div poll event=\\\"event\\\" class=\\\"poll\\\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"box\\\" ng-hide=\\\"event.comments.length == 0 && event.isClosed\\\">\\n        <div class=\\\"box-title\\\">\\n            Discussion\\n        </div>\\n        <div class=\\\"box-description\\\">\\n            You can discuss the event with your friends by leaving a comment below.\\n        </div>\\n        <div discussion event=\\\"event\\\">\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/home.html\",\"<div class=\\\"page-placeholder\\\">\\n    <div class=\\\"image\\\">\\n        <img src=\\\"/images/mark_large.png\\\" width=\\\"67\\\" />\\n    </div>\\n    <div class=\\\"title\\\">\\n        Schedule an Event\\n    </div>\\n    <div class=\\\"content\\\">\\n        Want to host an event but can’t decide on a date? Click on the button below to start!\\n    </div>\\n    <button ng-click=\\\"newEvent()\\\" class=\\\"btn\\\">Schedule New Event</button>\\n</div>\\n\");\n$templateCache.put(\"templates/newevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Schedule a New Event</div>\\n    <div class=\\\"box-description\\\">\\n        Fill in the form below to create your event and share it with your friends and colleagues.\\n    </div>\\n    <form novalidate autocomplete=\\\"off\\\" name=\\\"form\\\" ng-hide=\\\"eventUrl\\\" ng-submit=\\\"submit()\\\">\\n        <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" participants-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <div class=\\\"box-controls box-bottom-sticky\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn\\\">Create Event</button>\\n        </div>\\n\\n    </form>\\n    <div class=\\\"box-message animated zoomIn\\\" ng-show=\\\"eventUrl\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/success_large.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Created</div>\\n        <div class=\\\"content\\\">\\n            Your event has been created successfully! An email has been sent to each participant with a link to the event page. \\n        </div>\\n        <div class=\\\"mini-divider\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"true\\\" value=\\\"{{eventUrl}}\\\" />\\n            <a href=\\\"{{eventUrl}}\\\" class=\\\"btn form-btn\\\">GO</a>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/notfound.html\",\"<div class=\\\"not-found\\\">\\n    <video id=\\\"gfyVid1\\\" class=\\\"gfyVid\\\" width=\\\"480\\\" height=\\\"360\\\" autoplay=\\\"\\\" loop=\\\"\\\" muted=\\\"muted\\\" style=\\\"display: block;\\\" poster=\\\"//thumbs.gfycat.com/PaltryComfortableBaldeagle-poster.jpg\\\">\\n            <source id=\\\"webmsource\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.webm\\\" type=\\\"video/webm\\\">\\n            <source id=\\\"mp4source\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.mp4\\\" type=\\\"video/mp4\\\">\\n            Sorry, you don\\'t have HTML5 video and we didn\\'t catch this properly in javascript.\\n            You can try to view the gif directly: <a href=\\\"http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif\\\">http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif</a>.\\n        </video>\\n    <div class=\\\"overlay\\\">\\n        <div class=\\\"wrapper\\\">\\n            <div class=\\\"title\\\">Error 404 </div>\\n            <div class=\\\"description\\\">The page you are looking for could not be found!</h2>\\n            <div class=\\\"actions\\\">\\n                <a href=\\\"/\\\" target=\\\"_self\\\">Go to Homepage</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/notification.html\",\"<div class=\\\"notification {{notification.type}}\\\" ng-click=\\\"notification.close()\\\">\\n    <div class=\\\"title\\\">\\n        {{notification.title}}\\n    </div>\\n    <div class=\\\"message\\\">\\n        {{notification.message}}\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/datePicker.html\",\"<div class=\\\"date-picker\\\">\\n    <div class=\\\"wrapper\\\">\\n        <div class=\\\"date-picker-head\\\">\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"prevMonth()\\\">&#10094;</a>\\n            <span class=\\\"title\\\">\\n                <span class=\\\"title-text\\\">{{title}}</span>\\n            </span>\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"nextMonth()\\\">&#10095;</a>\\n        </div>\\n        <div class=\\\"dow\\\">\\n            <div class=\\\"day\\\">\\n                Su\\n            </div>\\n            <div class=\\\"day\\\">\\n                Mo\\n            </div>\\n            <div class=\\\"day\\\">\\n                Tu\\n            </div>\\n            <div class=\\\"day\\\">\\n                We\\n            </div>\\n            <div class=\\\"day\\\">\\n                Th\\n            </div>\\n            <div class=\\\"day\\\">\\n                Fr\\n            </div>\\n            <div class=\\\"day\\\">\\n                Sa\\n            </div>\\n        </div>\\n        <div class=\\\"values\\\">\\n            <div ng-repeat=\\\"day in days\\\" class=\\\"value\\\"  ng-class=\\\"{ outside : day.isOutsideMonth, today : day.isToday, active : isActive(day.date) }\\\" ng-click=\\\"selectDay(day)\\\">\\n                {{day.date | date : \\'d\\' }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/discussion.html\",\"<ul class=\\\"comment-thread\\\" ng-show=\\\"event.comments.length\\\">\\n    <li ng-repeat=\\\"comment in event.comments\\\" class=\\\"comment\\\">\\n        <div class=\\\"avatar-section\\\">\\n            <img src=\\\"/images/avatar.png\\\" />\\n        </div>\\n        <div class=\\\"comment-section\\\">\\n            <a href=\\\"#\\\" class=\\\"comment-delete\\\" ng-click=\\\"discussionCtrl.deleteComment(comment)\\\">&times;</a>\\n            <div class=\\\"meta\\\">\\n                <span class=\\\"name\\\">{{comment.author.name}}</span>\\n                <span class=\\\"time\\\">{{comment.created | elapsed}}</span>\\n            </div>\\n            <div class=\\\"content\\\" ng-bind-html=\\\"comment.content | linky\\\"></div>\\n        </div>\\n    </li>\\n</ul>\\n<form novalidate ng-submit=\\\"discussionCtrl.postComment()\\\" name=\\\"commentForm\\\" class=\\\"comment-form\\\">\\n    <div class=\\\"avatar-section\\\">\\n        <img src=\\\"/images/avatar.png\\\" />\\n    </div>\\n    <div class=\\\"input-section form-group\\\">\\n        <div class=\\\"content-section\\\">\\n            <textarea class=\\\"form-control\\\" required ng-model=\\\"comment.content\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\n        </div>\\n        <div class=\\\"name-section\\\">\\n            <div class=\\\"name-container\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Your Name\\\" ng-model=\\\"comment.author.name\\\" />\\n                <button type=\\\"submit\\\" class=\\\"btn\\\">Post Comment</button>\\n                <span class=\\\"form-error\\\" ng-show=\\\"commentForm.$submitted && commentForm.$error\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> Make sure you fill in all the fields.\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\");\n$templateCache.put(\"templates/directives/poll.html\",\"<div class=\\\"poll-header\\\">\\n    <div class=\\\"header participants-header\\\">\\n        {{event.participants.length}} participants\\n    </div>\\n    <div class=\\\"header date-header\\\" ng-repeat=\\\"d in event.dates\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{d | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{d | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{d | date : \\'MMM\\'}}\\n            </div>\\n            <span class=\\\"count\\\" ng-show=\\\"selectedDate($index)\\\" ng-class={top:isTopDate($index)}>{{selectedDate($index)}}</span>\\n        </div>\\n    </div>\\n    <div class=\\\"header actions-header\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"poll-body\\\">\\n    <div class=\\\"poll-entry\\\" ng-repeat=\\\"participant in event.participants\\\">\\n        <form novalidate ng-submit=\\\"editMode = false; pollCtrl.update(participant);\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{($index % 10) + 1 }}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input required autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"participant.name\\\" ng-show=\\\"editMode\\\" value=\\\"participant.name\\\"/>\\n                <span ng-hide=\\\"editMode\\\" class=\\\"name editable\\\" ng-click=\\\"editMode = true && !event.isClosed; pollCtrl.edit(participant)\\\">{{participant.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"participant.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"!participant.votes[$index]\\\" />\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-show=\\\"editMode\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-show=\\\"editMode\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\" ng-hide=\\\"event.isClosed\\\">\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"editMode = true; pollCtrl.edit(participant)\\\" class=\\\"btn hover\\\">Edit</button>\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"pollCtrl.delete(participant)\\\" class=\\\"btn danger hover\\\">Delete</button>\\n                <button type=\\\"submit\\\" ng-show=\\\"editMode\\\" class=\\\"btn\\\">Save</button>\\n                <button type=\\\"button\\\" ng-show=\\\"editMode\\\" ng-click=\\\"editMode = false; pollCtrl.cancel($index)\\\" class=\\\"btn\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"poll-example\\\" ng-class=\\\"{hidden : event.participants.length > 0}\\\">\\n        <div class=\\\"poll-entry\\\" ng-repeat=\\\"example in examples\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{$index + 1}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <span class=\\\"name\\\">{{example.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-if=\\\"example.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-if=\\\"!example.votes[$index]\\\" />\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\"overlay\\\">\\n            <div class=\\\"overlay-text\\\">\\n                Fill in the form below to get started\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-hide=\\\"event.isClosed\\\" class=\\\"poll-entry highlight\\\">\\n        <form novalidate name=\\\"formnew\\\" ng-submit=\\\"pollCtrl.save()\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{participant.style}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input autocomplete=\\\"off\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Your name...\\\" ng-model=\\\"participant.name\\\" required value=\\\"participant.name\\\"/>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n                <button type=\\\"submit\\\" ng-class=\\\"{ \\'animated shake\\' : formnew.$submitted && formnew.$invalid  }\\\" class=\\\"btn\\\">Save</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/timePicker.html\",\"<div class=\\\"time-picker\\\">\\n    <div class=\\\"time-picker-col\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{date | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{date | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{date | date : \\'MMM\\'}}\\n            </div>\\n            <!-- <span class=\\\"delete\\\" ng-click=\\\"datepicker.unsetDate(date)\\\"></span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"time-picker-col\\\" ng-repeat=\\\"time in date.times track by $index\\\">\\n        <input type=\\\"text\\\" class=\\\"time-picker-input\\\" time-picker ng-model=\\\"time\\\" ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" />\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/dateForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Dates</div>\\n    <ul class=\\\"daticon-list\\\">\\n        <li ng-repeat=\\\"d in event.dates\\\">\\n            <div class=\\\"daticon\\\">\\n                <div class=\\\"dow\\\">\\n                    {{d | date: \\'EEE\\'}}\\n                </div>\\n                <div class=\\\"day\\\">\\n                    {{d | date: \\'d\\'}}\\n                </div>\\n                <div class=\\\"month\\\">\\n                    {{d | date : \\'MMM\\'}}\\n                </div>\\n                <span class=\\\"delete\\\" ng-click=\\\"datepicker.removeDate(d)\\\"></span>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Calendar</label>\\n            <span class=\\\"form-error\\\" ng-show=\\\"form.$submitted && form.datepicker.$error.required\\\">\\n                <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> You need to select a few dates\\n            </span>\\n            <div datepicker required name=\\\"datepicker\\\" control=\\\"datepicker\\\" ng-model=\\\"event.dates\\\">\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/eventForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Event Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"title\\\">Title</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.title.$touched || form.$submitted) && errors.title\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.title}}\\n                </span>\\n                <input id=\\\"title\\\" name=\\\"title\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.title\\\" type=\\\"text\\\" placeholder=\\\"Monthly Meetup...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group optional\\\">\\n                <label for=\\\"location\\\">Location</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.location.$touched || form.$submitted) && errors.location\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.location}}\\n                </span>\\n                <input id=\\\"location\\\" name=\\\"location\\\" ng-model=\\\"event.location\\\" ng-maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Rick\\'s Cafe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label for=\\\"description\\\" >Description</label>\\n            <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"event.description\\\" placeholder=\\\"Enter Description...\\\" class=\\\"form-control extend\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/participantsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Invite Participants</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label>Participant\\'s Emails</label>\\n            <tags-input max-length=\\\"50\\\" allowed-tags-pattern=\\\"{{emailRegex}}\\\" display-property=\\\"email\\\" ng-model=\\\"event.emails\\\" placeholder=\\\"Add an Email\\\" type=\\\"email\\\" autocomplete=\\\"off\\\"></tags-input>\\n            <input type=\\\"hidden\\\" name=\\\"shouldCreate\\\" value=\\\"true\\\" />\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/settingsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Settings</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Poll Status\\n            </div>\\n            <div class=\\\"description\\\">\\n                Let people vote on the poll.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.isClosed ? \\'Closed\\' : \\'Open\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.isClosed\\\" invert>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Notifications\\n            </div>\\n            <div class=\\\"description\\\">\\n                Send me an email when someone votes or comments on the event.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.creator.allowNotifications ? \\'Enabled\\' : \\'Disabled\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.creator.allowNotifications\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Delete Event\\n            </div>\\n            <div class=\\\"description\\\">\\n                Once you delete an event it will no longer be accessible.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"deleteEvent()\\\" class=\\\"btn\\\" ng-class=\\\"{danger : !deleteRequestSent, disabled : deleteRequestSent}\\\">{{deleteRequestSent ? \\'Request Sent\\' : \\'Delete Event\\' }}</button>\\n        </div>\\n    </div>\\n</div>\\n</section>\\n\");\n$templateCache.put(\"templates/form/timeForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Times</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <table class=\\\"time-form\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n\\n                </th>\\n                <th>\\n                    Time 1\\n                </th>\\n                <th>\\n                    Time 2\\n                </th>\\n                <th>\\n                    Time 3\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr ng-repeat=\\\"d in event.dates\\\">\\n                <td>\\n                    <div class=\\\"daticon\\\">\\n                        <div class=\\\"dow\\\">\\n                            {{d.date | date: \\'EEE\\'}}\\n                        </div>\\n                        <div class=\\\"day\\\">\\n                            {{d.date | date: \\'d\\'}}\\n                        </div>\\n                        <div class=\\\"month\\\">\\n                            {{d.date | date : \\'MMM\\'}}\\n                        </div>\\n                        <span class=\\\"delete\\\" ng-click=\\\"unsetDate(d.date)\\\"></span>\\n                    </div>\\n                </td>\\n                <td ng-repeat=\\\"time in [1,2,3] track by $index\\\">\\n                    <input type=\\\"text\\\" time-picker ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" ng-model=\\\"d.times[$index]\\\" class=\\\"time-picker-input\\\" />\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\");\n$templateCache.put(\"templates/form/userForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Your Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.name.$touched || form.$submitted) && errors.name\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.name}}\\n                </span>\\n                <input id=\\\"name\\\" name=\\\"name\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.creator.name\\\" type=\\\"text\\\" placeholder=\\\"John Doe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.email.$touched || form.$submitted) && errors.email\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.email}}\\n                </span>\\n                <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ng-pattern=\\\"emailRegex\\\" required ng-model=\\\"event.creator.email\\\" placeholder=\\\"john.doe@email.com...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");}]);","angular.module('rallly')\n.controller('AboutCtrl', function(Title){\n    Title.set('About Rallly')\n});\n","angular.module('rallly')\n.controller('AccountCtrl', function($scope, ConfirmModal){\n    $scope.showNotice = function(){\n        \n    }\n})\n","angular.module('rallly')\n.controller('EditEventCtrl', function($scope, $http, $state, $timeout, Event, ConfirmModal, Notification, Title){\n    var id = $state.params.id\n    $scope.event = Event.get({id:id}, function(data){\n        Title.set(\"Edit: \" + $scope.event.title);\n        $scope.master = angular.copy($scope.event);\n    }, function(e){\n        $state.go('notfound');\n    });\n    $scope.$watch('event.isDeleted', function(value){\n        if (value){\n            $state.go('deletedevent');\n        }\n    });\n    $scope.undoChanges = function(){\n        $scope.event = angular.copy($scope.master);\n    }\n    $scope.didChange = function(){\n        return JSON.stringify($scope.master) != JSON.stringify($scope.event);\n    }\n    $scope.didChangeDates = function(){\n        return JSON.stringify($scope.master.dates) != JSON.stringify($scope.event.dates);\n    }\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            if ($scope.didChangeDates() ){\n                var modal = new ConfirmModal({\n                    title : 'Hold up!',\n                    message : 'Changing the dates will reset all entries by the participants. Are you sure you want to do that?',\n                    confirmText : 'Yes, I\\'m sure',\n                    isDestructive : true,\n                    confirm : function(){\n                        $scope.event.participants = [];\n                        update();\n                    }\n                });\n\n            } else {\n                update();\n            }\n        } else {\n            var notification = new Notification({\n                title : 'Not so fast',\n                message : 'Make sure you fill in all the required fields and try again.',\n                type : 'error'\n            });\n        }\n    }\n    var update = function(){\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var notification = new Notification({\n                title : 'Changes Saved',\n                message : 'Your changes have been saved successfully.',\n                type : 'success'\n            });\n            $scope.master = angular.copy($scope.event);\n        });\n    }\n});\n","angular.module('rallly')\n.controller('EventCtrl', function($scope, $http, $state, Title, Event, ConfirmModal, Communicator){\n\n    var id = $state.params.id;\n    // Get Event\n    $scope.event = Event.get({id:id}, function(data){\n        // Set the page title to the event title\n        if (data.isDeleted) {\n            $state.go('deletedevent');\n            return;\n        }\n        \n        Communicator.trigger('view:event', data);\n\n        Title.set($scope.event.title);\n        // Generate event url - i.e. http://rallly.co/jF9F_Fd\n        $scope.eventUrl = $state.href('event', {\n            id: $scope.event._id\n        }, {\n            absolute : true\n        });\n    }, function(e){\n        $state.go('notfound');\n    });\n\n    $scope.openEvent = function(){\n        $scope.event.isClosed = false;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Open',\n                message : 'People can vote and comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.closeEvent = function(){\n        $scope.event.isClosed = true;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Closed',\n                message : 'People can no longer vote or comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.editEvent = function(){\n        $state.go('editevent', { id : $scope.event._id });\n    }\n\n});\n","angular.module('rallly')\n.controller('ExampleCtrl', function($state, Event){\n    // Generate dates\n\n    var dates = [], date = new Date();\n    for (var i = 0; i < 4; i++){\n        dates.push(date.add(Math.ceil(Math.random() * 5)).days().toISOString());\n    }\n    // Generate Participants\n    var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n    var examples = [];\n    for (var i = 0; i < examplesNames.length; i++){\n        var example = { name : examplesNames[i] };\n        example.votes = [];\n        for (var j = 0; j <  dates.length; j++){\n            var answer = Math.random()<.5;\n            example.votes[j] = answer;\n        }\n        examples.push(example);\n    }\n    var event =  new Event({\n        \"creator\": {\n         \"name\": \"John Example\",\n         \"email\": \"rallly@lukevella.com\",\n         \"allowNotifications\" : false\n        },\n        \"title\": \"Lunch Meeting\",\n        \"location\": \"Starbucks, 901 New York Avenue\",\n        \"description\": \"This event has been automatically generated just for you! Feel free to try out all the different features and when you're ready, you can schedule a new event.\",\n        \"dates\" : dates,\n        \"participants\" : examples,\n        \"emails\": [],\n        \"comments\" : [{\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Hey guys, this is a comment!\"\n        }, {\n            author : {\n                name : \"Mark Instance\"\n            },\n            content : \"Hi John... nice comment. Keep up the great work!\"\n        }, {\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Thank you!\"\n        }],\n        \"isExample\" : true\n    });\n    event.$save(function(data){\n        $state.go('event', { id : data._id }, {\n            location : \"replace\"\n        });\n    })\n});\n","angular.module('rallly')\n.controller('HomeCtrl', function($scope, $state, Title){\n    Title.set('Rallly - Collaborative Scheduling')\n\n    $scope.newEvent = function(){\n        $state.go('newevent');\n    }\n});\n","angular.module('rallly')\n.controller('NavigationCtrl', function($scope, $rootScope, $location, $document){\n    $scope.isActive = function(path) {\n        if ($location.path() == path) {\n            return true;\n        } else {\n            return false\n        }\n    }\n\n\n\n    var clickHandler = function(event){\n        var isClickedElementChildOfPopup = angular.element('.mobile-navigation').find(event.target).length > 0;\n        console.log(isClickedElementChildOfPopup);\n        if (isClickedElementChildOfPopup) return;\n        $scope.toggleMenu()\n    }\n\n    $rootScope.$on('$stateChangeSuccess', function(){\n        angular.element('body').removeClass('open-menu');\n        $document.unbind('click', clickHandler);\n    });\n\n    $scope.toggleMenu = function(){\n        console.log('click');\n        var isOpen = angular.element('body').hasClass('open-menu');\n        if (isOpen) {\n            angular.element('body').removeClass('open-menu');\n            $document.unbind('click', clickHandler);\n        } else {\n            angular.element('body').addClass('open-menu');\n            $document.bind('click', clickHandler);\n        }\n    }\n\n\n})\n","angular.module('rallly')\n.controller('NewEventCtrl', function($scope, $http, $state, Event, ConfirmModal, Notification, Communicator){\n\n    $scope.title = \"Schedule a New Event\";\n    $scope.description = \"Fill in the form below to create your event and share it with your friends and colleagues.\";\n    $scope.event = { creator : {\n        allowNotifications : true\n    }};\n\n\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            var newEvent = new Event($scope.event);\n            newEvent.$save()\n            .then(function(event){\n                $scope.event = event;\n                $scope.eventUrl = $state.href('event', {\n                    id: $scope.event._id\n                }, {\n                    absolute : true\n                });\n                Communicator.trigger('add:event', event);\n                $state.go('newevent.success');\n            }, function(){\n                var modal = new ConfirmModal({\n                    title : 'Uh oh!',\n                    message : 'There was an error creating your event. Please try again later.',\n                    cancelText : 'OK'\n                });\n            });\n        } else {\n            var notification = new Notification({\n                title : 'Hold on!',\n                message : 'Make sure you fill in all the required fields and that your data is correct.'\n            });\n        }\n    }\n\n});\n","angular.module('rallly')\n.controller('VerificationCtrl', function(Event, Notification, $state){\n    Event.verify({id : $state.params.id, code :$state.params.code}, function(){\n        var notification = new Notification({\n            title : 'Email Verified',\n            message : 'Your email has been verified. You will now be able to receive email notifications for this event',\n            type : 'success',\n            timeout : 5000\n        });\n    }, function(e){\n        var notification = new Notification({\n            title : 'Verification Failed',\n            message : 'Your verification code has expired.',\n            type : 'error'\n        });\n    });\n    $state.go('event', { id : $state.params.id }, {\n        location : \"replace\"\n    });\n\n});\n","angular.module('rallly')\n.directive('backImg', function(){\n    return function(scope, element, attrs){\n        var url = attrs.backImg;\n        element.css({\n            'background-image': 'url(/images/' + url +'.png)'\n        });\n    };\n})\n","angular.module('rallly')\n.directive('datepicker', function(){\n    return {\n        restrict : 'A',\n        require : 'ngModel',\n        scope : {\n            model : '=ngModel',\n            control : '='\n        },\n        templateUrl: 'templates/directives/datePicker.html',\n        link : function(scope, el, attrs, ngModel){\n            scope.model = scope.model || [];\n            scope.control = scope.control || {};\n\n            scope.$watch('model', function(newValue){\n                ngModel.$setViewValue(newValue);\n                ngModel.$validate();\n            }, true);\n\n            ngModel.$validators.required = function(modelValue, viewValue){\n                if (!modelValue || modelValue.length == 0){\n                    return false;\n                }\n                return true;\n            }\n\n            var today = Date.today(), activeDate = today.clone();\n            var setMonth = function(toDate){\n                activeDate = toDate;\n                var startDate = activeDate.clone().moveToFirstDayOfMonth(), // get first day of active month\n                    startDateDOW = startDate.getDay(); // get day of the week for the active start date of the active month\n                // Set the startDate to the previous Sunday\n                if (startDateDOW == 0){\n                    startDate.add(-7).days();\n                } else {\n                    startDate.add(startDateDOW * -1).days();\n                }\n                scope.title = activeDate.toString('MMMM yyyy');\n                var days = new Array(42);\n                for (var i = 0; i < days.length; i++){\n                    var date = startDate.clone().add(i).days()\n                    days[i] = {\n                        date : date,\n                        isOutsideMonth : (date.getMonth() != activeDate.getMonth()) ? true : false,\n                        isToday : (Date.equals(date, today))\n                    }\n                }\n                scope.days = days;\n            }\n            setMonth(activeDate);\n            scope.selectDay = function(dayObj){\n                if (dayObj.isOutsideMonth) {\n                    setMonth(dayObj.date);\n                }\n                if ((index = scope.isActive(dayObj.date, true)) != -1) {\n                    // Already selected\n                    scope.model.splice(index, 1); // remove\n                } else {\n                    // Not selected\n                    var index = 0, inserted = false;\n                    do {\n                        if (scope.model[index] == undefined || Date.compare(Date.parse(scope.model[index]), dayObj.date) > 0){\n                            scope.model.splice(index, 0, dayObj.date);\n                            inserted = true;\n                        }\n                        index++;\n                    } while (inserted == false);\n                }\n            }\n            scope.isActive = function(date, returnIndex){\n                scope.model = scope.model || [];\n                for (var i = 0; i < scope.model.length; i++){\n                    var modelDate = Date.parse(scope.model[i]);\n                    if (modelDate.getDate() == date.getDate() &&\n                        modelDate.getMonth() == date.getMonth() &&\n                        modelDate.getYear() == date.getYear()){\n                        return (returnIndex) ? i : true;\n                    }\n                }\n                return (returnIndex) ? -1 : false;\n            }\n            scope.nextMonth = function(){\n                setMonth(activeDate.clone().add(1).months());\n            }\n            scope.prevMonth = function(){\n                setMonth(activeDate.clone().add(-1).months());\n            }\n\n            scope.control.removeDate = function(date){\n                if ((index = scope.isActive(Date.parse(date), true)) != -1) {\n                    scope.model.splice(index, 1)\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('discussion', function($timeout, Comment, ConfirmModal, Communicator){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/discussion.html',\n        scope : {\n            'event' : '='\n        },\n        controllerAs : 'discussionCtrl',\n        controller : function($scope, $rootScope){\n            $scope.comment = { author : {}, comment : '' };\n            $rootScope.$on('add:participant', function(e, event, participant){\n                $scope.comment.author.name = participant.name;\n            });\n            this.deleteComment = function(comment){\n                var modal = new ConfirmModal({\n                    title : 'Are you sure?',\n                    message : 'Are you sure you want to remove this comment?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Comment.remove({ id : $scope.event._id , cid : comment._id }, function(event){\n                            $scope.event = event;\n                        });\n                    }\n                });\n            }\n            this.postComment = function(){\n                if ($scope.commentForm.$valid){\n                    var comment = new Comment($scope.comment);\n                    comment.$save({id:$scope.event._id}, function(event){\n                        $scope.event = event;\n                        Communicator.trigger('add:comment', event, $scope.comment);\n                        $scope.comment.content = '';\n                        $timeout($scope.scrollToBottom);\n                    });\n                    $scope.commentForm.$setPristine();\n                }\n            }\n            $scope.scrollToBottom = function(){\n                var thread = angular.element('.comment-thread');\n                thread.scrollTop(thread.prop('scrollHeight'));\n            }\n        },\n        link : function(scope, el, attrs){\n            $timeout(scope.scrollToBottom);\n        }\n    }\n});\n","angular.module('rallly')\n.directive('dropdown', function($document){\n    return {\n        restrict : 'A',\n        link : function(scope, el, attrs){\n            el.addClass('dropdown');\n            scope.open = false;\n\n            var clickHandler = function(event){\n                var isClickedElementChildOfPopup = el.find(event.target).length > 0;\n                if (isClickedElementChildOfPopup) return;\n                scope.toggle();\n            }\n\n            scope.toggle = function(){\n                scope.open = !scope.open;\n                if (scope.open){\n                    el.addClass('open');\n                    $document.bind('click', clickHandler);\n                } else {\n                    el.removeClass('open');\n                    $document.unbind('click', clickHandler);\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.service('FormHelper', function(){\n    this.emailRegexString = '^([\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4})?$';\n    this.emailRegex = new RegExp(this.emailRegexString);\n    this.prettyError = function(errors, field){\n        if (errors.required) return field + \" is required\";\n        if (errors.pattern) return field + \" is invalid\" ;\n        if (errors.maxlength) return field + \" is too long\";\n        return false;\n    }\n})\n.directive('userForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/userForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.emailRegex = FormHelper.emailRegex;\n\n            scope.$watchCollection('form.name.$error',function(errors){\n                scope.errors.name = FormHelper.prettyError(errors, \"Name\");\n            });\n\n            scope.$watchCollection('form.email.$error',function(errors){\n                scope.errors.email = FormHelper.prettyError(errors, \"Email\");\n            });\n        }\n    }\n})\n.directive('eventForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/eventForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.$watchCollection('form.title.$error',function(errors){\n                scope.errors.title = FormHelper.prettyError(errors, \"Title\");\n            });\n\n            scope.$watchCollection('form.location.$error',function(errors){\n                scope.errors.location = FormHelper.prettyError(errors, \"Location\");\n            });\n\n        }\n    }\n})\n.directive('dateForm', function(){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/dateForm.html'\n    }\n})\n.directive('participantsForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/participantsForm.html',\n        link : function(scope, el, attrs){\n            scope.emailRegex = FormHelper.emailRegexString;\n        }\n    }\n})\n.directive('settingsForm', function(Event, ConfirmModal){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/settingsForm.html',\n        link : function(scope, el, attrs){\n            scope.deleteEvent = function(){\n                var modal = new ConfirmModal({\n                    title : 'Are you sure?',\n                    message : 'The event will no longer be accessible after it is deleted. Are you sure you want to continue?',\n                    isDestructive : true,\n                    confirmText : 'Yes - delete',\n                    cancelText : 'Cancel',\n                    confirm : function(){\n                        Event.delete({'id' : scope.event._id}, function(e){\n                            scope.event.isDeleted = true;\n                        });\n                    }\n                });\n            }\n        }\n    }\n})\n.directive('switchToggle', function(){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel) {\n            el.addClass('switch-toggle');\n            var setClass = function(){\n                if (scope.model ^ typeof(attrs.invert) !== 'undefined'){\n                    el.addClass('active');\n                } else {\n                    el.removeClass('active');\n                }\n            }\n            scope.$watch('model', setClass);\n            el.bind('click', function(e){\n                scope.model = !scope.model;\n                ngModel.$setViewValue(scope.model, e);\n            });\n        }\n    }\n})\n.directive('timeForm', function(DatePickerService){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/timeForm.html',\n        link : function(scope, el, attrs){\n            var init = false;\n            var dateService;\n            var deregister = scope.$watch('event.dates', function(value){\n                if (value && !init) {\n                    deregister();\n                }\n                init = true;\n                dateService = new DatePickerService(scope.event.dates);\n                scope.unsetDate = function(date){\n                    dateService.removeDate(date);\n                }\n            });\n        }\n    }\n})\n.directive('timePicker', function($timeout){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel){\n            ngModel.$viewChangeListeners.push(function(){\n                scope.model = ngModel.$modelValue;\n            });\n\n            ngModel.$parsers.push(function (value) {\n                if (!value) return;\n                return Date.parse(value);\n            });\n\n            ngModel.$validators.time = function(modelValue, viewValue){\n                if (ngModel.$isEmpty(modelValue)) return true;\n                var time = Date.parse(modelValue);\n                if (time) {\n                    ngModel.$setViewValue(time.toString(\"hh:mm tt\"));\n                    ngModel.$render();\n                    return true;\n                }\n                return false;\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('poll', function($timeout, Participant, ConfirmModal, Communicator){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/poll.html',\n        $scope : {\n            'event' : '='\n        },\n        controllerAs : 'pollCtrl',\n        controller : function($scope, $rootScope){\n            $scope.defaults = [];\n            $scope.participant = {};\n            $rootScope.$on('add:comment', function(e, event, comment){\n                // Don't repopulate field if user has already voted\n                if (!$scope.didVote) {\n                    $scope.participant.name = comment.author.name;\n                }\n            });\n            this.delete = function(participant){\n                var modal = new ConfirmModal({\n                    title : 'Delete ' + participant.name + '?',\n                    message : 'Are you sure you want to remove '+participant.name+' from the poll?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Participant.remove({ id : $scope.event._id , pid : participant._id }, function(event){\n                            $scope.event = event;\n                            Communicator.trigger('delete:participant', event);\n                        });\n                    }\n                });\n            }\n            this.update = function(participant){\n                Participant.update({\n                    id : $scope.event._id,\n                    pid : participant._id\n                }, participant);\n            }\n            this.edit = function(participant){\n                $scope.defaults[$scope.event.participants.indexOf(participant)] = angular.copy(participant);\n            }\n            this.cancel = function(index){\n                $scope.event.participants[index] = $scope.defaults[index];\n            }\n            this.save = function(){\n                if ($scope.formnew.$valid){\n                    var participant = new Participant($scope.participant);\n                    participant.$save({id:$scope.event._id}, function(event){\n                        $scope.event = event;\n                        $scope.didVote = true;\n                        Communicator.trigger('add:participant', event, $scope.participant);\n                        $scope.participant = {};\n                    });\n                    $scope.formnew.$setPristine();\n                }\n            }\n        },\n        link : function(scope, el, attrs, discussionCtrl){\n            var datesCount = [];\n\n            scope.event.$promise.then(function(event){\n                var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n                var examples = [];\n                for (var i = 0; i < examplesNames.length; i++){\n                    var example = { name : examplesNames[i] };\n                    example.votes = [];\n                    for (var j = 0; j <  event.dates.length; j++){\n                        var answer = Math.random()<.5;\n                        example.votes[j] = answer;\n                    }\n                    examples.push(example);\n                }\n                scope.examples = examples;\n            })\n\n            scope.isTopDate = function(index){\n                var count = datesCount[index];\n                for (var i = 0; i < datesCount.length; i++){\n                    if (datesCount[i] > count) return false;\n                }\n                return true;\n            }\n\n            scope.selectedDate = function(index){\n                datesCount[index] = 0;\n                for (var i = 0; i < scope.event.participants.length; i++){\n                    if (scope.event.participants[i].votes[index]) datesCount[index]++;\n                }\n                return datesCount[index];\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.filter('elapsed', function($filter){\n    return function(date){\n        if (!date) return;\n        var time = Date.parse(date),\n            timeNow = new Date().getTime(),\n            difference = timeNow - time,\n            seconds = Math.floor(difference / 1000),\n            minutes = Math.floor(seconds / 60),\n            hours = Math.floor(minutes / 60),\n            days = Math.floor(hours / 24);\n        if (days > 30) {\n            return 'on ' + $filter('date')(date, 'MMMM d');\n        } else if (days > 1) {\n            return days + \" days ago\";\n        } else if (days == 1) {\n            return \"1 day ago\"\n        } else if (hours > 1) {\n            return hours + \" hours ago\";\n        } else if (hours == 1) {\n            return \"an hour ago\";\n        } else if (minutes > 1) {\n            return minutes + \" minutes ago\";\n        } else if (minutes == 1){\n            return \"a minute ago\";\n        } else {\n            return \"a few seconds ago\";\n        }\n    }\n})\n","angular.module('rallly')\n.factory('Communicator', function($rootScope){\n    return new (function(){\n        this.trigger = function(){\n            $rootScope.$emit.apply($rootScope, arguments);\n        }\n        $rootScope.$on('view:event',function(e, data){\n            mixpanel.track('View Event', {\n                id : data._id,\n                participants : data.participants.length,\n                comments  : data.comments.length,\n                isExample : data.isExample,\n                dates : data.dates.length\n            });\n        })\n\n        $rootScope.$on('add:participant', function(e, event, participant){\n            mixpanel.track('Add Participant', {\n                id : event._id\n            })\n        })\n\n        $rootScope.$on('add:comment', function(e, event, comment){\n            mixpanel.track('Add Comment', {\n                id : event._id\n            })\n        })\n\n        $rootScope.$on('add:event', function(e, data){\n            mixpanel.track('Add Event', {\n                id : data._id,\n                participants : data.participants.length,\n                comments  : data.comments.length,\n                isExample : data.isExample,\n                dates : data.dates.length\n            })\n        })\n\n    })();\n});\n","angular.module('rallly')\n.factory('ConfirmModal', function(btfModal){\n\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/confirmmodal.html',\n            controllerAs : 'modal',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.confirm = (config.confirm) ? function(){config.confirm(); modal.deactivate()} : false;\n                this.cancel = modal.deactivate;\n                this.confirmText = config.confirmText || 'Confirm';\n                this.cancelText = config.cancelText || 'Cancel';\n                this.isDestructive = config.isDestructive;\n            }\n        });\n        modal.activate();\n        \n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n","angular.module('rallly')\n.factory('Notification', function($timeout, btfModal){\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/notification.html',\n            controllerAs : 'notification',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.close = modal.deactivate;\n                this.type = config.type;\n                var timeout = config.timeout || 5000;\n                $timeout(modal.deactivate, timeout);\n            }\n        });\n        modal.activate();\n\n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n"],"sourceRoot":"/source/"}