{"version":3,"sources":["main.js","templates.js","controllers/about.controller.js","controllers/account.controller.js","controllers/deletion.controller.js","controllers/editevent.controller.js","controllers/event.controller.js","controllers/example.controller.js","controllers/home.controller.js","controllers/navigation.controller.js","controllers/newevent.controller.js","controllers/verification.controller.js","directives/backImg.directive.js","directives/datepicker.directive.js","directives/discussion.directive.js","directives/dropdown.directive.js","directives/form.directive.js","directives/poll.directive.js","filters/elapsed.filter.js","services/modal.service.js","services/notification.service.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["angular.module('rallly', ['ui.router','ngResource','btford.modal','ngTagsInput','ngAnimate'])\n    .config(function($stateProvider, $urlRouterProvider, $locationProvider){\n        $locationProvider.html5Mode(true);\n        $urlRouterProvider.otherwise(\"/notfound\")\n        $stateProvider\n        // .state('index',{\n        //     url : '/',\n        //     templateUrl : 'templates/home.html',\n        //     controller : 'HomeCtrl'\n        // })\n        .state('newevent',{\n            url : '/new',\n            templateUrl : 'templates/newevent.html',\n            controller : 'NewEventCtrl',\n        })\n        .state('newevent.success', {\n            templateUrl : 'templates/newEvent/success.html'\n        })\n        .state('about', {\n            url : '/about',\n            templateUrl : 'templates/about.html',\n            controller : 'AboutCtrl'\n        })\n        .state('example', {\n            url : '/example',\n            controller : 'ExampleCtrl'\n        })\n        .state('notfound', {\n            url : '/notfound',\n            templateUrl : 'templates/notfound.html'\n        })\n        .state('event',{\n            url : '/:id',\n            templateUrl : 'templates/event.html',\n            controller : 'EventCtrl'\n        })\n        .state('editevent', {\n            url: '/:id/edit',\n            templateUrl : 'templates/editevent.html',\n            controller : 'EditEventCtrl'\n        })\n        .state('verifyevent', {\n            url : '/verify/:id/code/:code',\n            controller : 'VerificationCtrl'\n        })\n        .state('deleteevent', {\n            url : '/delete/:id/code/:code',\n            controller : 'DeletionCtrl'\n        })\n    })\n    .factory('Event', function($resource){\n        return $resource('/api/event/:id', { id : '@_id' }, {\n            'update' : { method : 'PUT' },\n            'verify' : { method : 'GET', url : '/api/event/:id/code/:code' },\n            'destroy': { method : 'DELETE', url: '/api/event/:id/code/:code' }\n        });\n    })\n    .factory('Participant', function($resource){\n        return $resource('/api/event/:id/participant/:pid', { id: '@_id'}, {\n            'update' : { method : 'PUT' }\n        });\n    })\n    .factory('Comment', function($resource){\n        return $resource('/api/event/:id/comment/:cid', { id : '@_id' }, {\n            'update' : { method : 'PUT' }\n        })\n    })\n    .factory('Title', function(){\n        return {\n            set : function(title){\n                document.title = title;\n            }\n        }\n    });\n","angular.module(\"rallly\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/about.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Frequently Asked Questions</div>\\n    <div class=\\\"box-description\\\">\\n        Want to find out more about Rallly? Check out the FAQs below.\\n    </div>    <h2>What is Rallly?</h2>\\n    <p>\\n        Rallly is a collaborative scheduling service that makes deciding on a date fast and easy. In other words, Rallly helps you and your friends decide on a date to host an event.\\n    </p>\\n    <h2>Why is it called Rallly?</h2>\\n    <p>\\n        The name is derived from the proper spelling of the word, &ldquo;rally&rdquo;. The Webster dictionary defines rally as, &ldquo;to muster for a common purpose&rdquo; which accurately describes the goal of this service. The inproper spelling can be attributed to the difficulty of finding short and meaningful domain names.\\n    </p>\\n    <h2>Who made this?</h2>\\n    <p>\\n        Rallly was created by <a href=\\\"http://lukevella.com\\\">Luke Vella</a>.\\n    </p>\\n</div>\\n\");\n$templateCache.put(\"templates/confirmmodal.html\",\"<div class=\\\"rl-modal-overlay\\\">\\n\\n<div class=\\\"rl-modal-position\\\">\\n\\n    <div class=\\\"rl-modal\\\">\\n        <div class=\\\"rl-modal-title\\\">{{modal.title}}</div>\\n        <div class=\\\"rl-modal-message\\\">\\n            {{modal.message}}\\n        </div>\\n        <div class=\\\"rl-modal-actions\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"modal.confirm()\\\" ng-show=\\\"modal.confirm\\\" class=\\\"btn\\\" ng-class=\\\"{danger : modal.isDestructive}\\\">{{modal.confirmText}}</button>\\n            <button type=\\\"button\\\" ng-click=\\\"modal.cancel()\\\"  class=\\\"btn\\\">{{modal.cancelText}}</button>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/editevent.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box\\\">\\n\\n        <div class=\\\"box-title\\\">Edit Event</div>\\n        <div class=\\\"box-description\\\">\\n            You can makes changes to your existing event by changing the fields in the form below.\\n        </div>\\n\\n        <form novalidate name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n\\n            <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n            <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <div class=\\\"box-controls box-bottom-sticky\\\">\\n                <button type=\\\"submit\\\" ng-show=\\\"didChange()\\\" class=\\\"btn btn-primary\\\" ng-class=\\\"{disabled : !didChange()}\\\">\\n                    Save Changes\\n                </button>\\n                <button type=\\\"button\\\" ng-click=\\\"undoChanges()\\\" class=\\\"btn\\\" ng-show=\\\"didChange()\\\">Undo Changes</button>\\n                <a href=\\\"/{{event._id}}\\\" class=\\\"btn\\\" ng-hide=\\\"didChange()\\\">Done</a>\\n            </div>\\n\\n        </form>\\n\\n    </div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/event.html\",\"<div ng-show=\\\"event._id && !event.isDeleted\\\">\\n    <div class=\\\"box \\\">\\n        <div class=\\\"event-header\\\">\\n            <div class=\\\"details\\\">\\n                <div class=\\\"title\\\">\\n                    {{event.title}}\\n                    <span class=\\\"title-label danger\\\" ng-show=\\\"event.isClosed\\\">Poll Closed</span>\\n                    <span class=\\\"title-label success\\\" ng-hide=\\\"event.isClosed\\\">Poll Open</span>\\n                </div>\\n                <div class=\\\"subtitle\\\">\\n                    Created by <a href=\\\"mailto:{{event.creator.email}}\\\">{{event.creator.name}}</a>\\n                    &bull; {{event.created | elapsed}}\\n                    &bull; <a href=\\\"#\\\" ng-click=\\\"editEvent()\\\">Edit Details</a>\\n                </div>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn\\\" ng-click=\\\"editEvent()\\\">Edit Event</button>\\n            </div>\\n        </div>\\n        <div class=\\\"event-description\\\" ng-if=\\\"event.description\\\">{{event.description}}</div>\\n        <div class=\\\"event-location\\\" ng-if=\\\"event.location\\\">\\n            Location:\\n            <a  href=\\\"http://maps.google.com?q={{event.location}}\\\"  target=\\\"_blank\\\">{{event.location}}</a>\\n        </div>\\n\\n        <div class=\\\"poll-wrapper\\\">\\n            <div poll event=\\\"event\\\" class=\\\"poll\\\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"box\\\" ng-hide=\\\"event.comments.length == 0 && event.isClosed\\\">\\n        <div class=\\\"box-title\\\">\\n            Discussion\\n        </div>\\n        <div class=\\\"box-description\\\">\\n            You can discuss the event with your friends by leaving a comment below.\\n        </div>\\n        <div discussion event=\\\"event\\\">\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/home.html\",\"<div class=\\\"page-placeholder\\\">\\n    <div class=\\\"image\\\">\\n        <img src=\\\"/images/mark_large.png\\\" width=\\\"67\\\" />\\n    </div>\\n    <div class=\\\"title\\\">\\n        Schedule an Event\\n    </div>\\n    <div class=\\\"content\\\">\\n        Want to host an event but can’t decide on a date? Click on the button below to start!\\n    </div>\\n    <button ng-click=\\\"newEvent()\\\" class=\\\"btn\\\">Schedule New Event</button>\\n</div>\\n\");\n$templateCache.put(\"templates/newevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Schedule a New Event</div>\\n    <div class=\\\"box-description\\\">\\n        Fill in the form below to create your event and share it with your friends and colleagues.\\n    </div>\\n    <form novalidate autocomplete=\\\"off\\\" name=\\\"form\\\" ng-hide=\\\"eventUrl\\\" ng-submit=\\\"submit()\\\">\\n        <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" participants-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <div class=\\\"box-controls box-bottom-sticky\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn\\\">Create Event</button>\\n        </div>\\n\\n    </form>\\n    <div class=\\\"box-message animated zoomIn\\\" ng-show=\\\"eventUrl\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/success_large.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Created</div>\\n        <div class=\\\"content\\\">\\n            Your event has been created successfully! You should receive an email shortly with instructions to verify your email address.\\n        </div>\\n        <div class=\\\"mini-divider\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"true\\\" value=\\\"{{eventUrl}}\\\" />\\n            <a href=\\\"{{eventUrl}}\\\" class=\\\"btn form-btn\\\">GO</a>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/notfound.html\",\"<h1>Error 404</h1>\\n<h2>Not Found</h2>\\n\");\n$templateCache.put(\"templates/notification.html\",\"<div class=\\\"notification {{notification.type}}\\\" ng-click=\\\"notification.close()\\\">\\n    <div class=\\\"title\\\">\\n        {{notification.title}}\\n    </div>\\n    <div class=\\\"message\\\">\\n        {{notification.message}}\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/datePicker.html\",\"<div class=\\\"date-picker\\\">\\n    <div class=\\\"wrapper\\\">\\n        <div class=\\\"date-picker-head\\\">\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"prevMonth()\\\">&#10094;</a>\\n            <span class=\\\"title\\\">\\n                <span class=\\\"title-text\\\">{{title}}</span>\\n            </span>\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"nextMonth()\\\">&#10095;</a>\\n        </div>\\n        <div class=\\\"dow\\\">\\n            <div class=\\\"day\\\">\\n                Su\\n            </div>\\n            <div class=\\\"day\\\">\\n                Mo\\n            </div>\\n            <div class=\\\"day\\\">\\n                Tu\\n            </div>\\n            <div class=\\\"day\\\">\\n                We\\n            </div>\\n            <div class=\\\"day\\\">\\n                Th\\n            </div>\\n            <div class=\\\"day\\\">\\n                Fr\\n            </div>\\n            <div class=\\\"day\\\">\\n                Sa\\n            </div>\\n        </div>\\n        <div class=\\\"values\\\">\\n            <div ng-repeat=\\\"day in days\\\" class=\\\"value\\\"  ng-class=\\\"{ outside : day.isOutsideMonth, today : day.isToday, active : isActive(day.date) }\\\" ng-click=\\\"selectDay(day)\\\">\\n                {{day.date | date : \\'d\\' }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/discussion.html\",\"<ul class=\\\"comment-thread\\\" ng-show=\\\"event.comments.length\\\">\\n    <li ng-repeat=\\\"comment in event.comments\\\" class=\\\"comment\\\">\\n        <div class=\\\"avatar-section\\\">\\n            <img src=\\\"/images/avatar.png\\\" />\\n        </div>\\n        <div class=\\\"comment-section\\\">\\n            <a href=\\\"#\\\" class=\\\"comment-delete\\\" ng-click=\\\"deleteComment(comment)\\\">&times;</a>\\n            <div class=\\\"meta\\\">\\n                <span class=\\\"name\\\">{{comment.author.name}}</span>\\n                <span class=\\\"time\\\">{{comment.created | elapsed}}</span>\\n            </div>\\n            <div class=\\\"content\\\">{{comment.content}}</div>\\n        </div>\\n    </li>\\n</ul>\\n<form novalidate ng-submit=\\\"postComment()\\\" name=\\\"commentForm\\\" class=\\\"comment-form\\\">\\n    <div class=\\\"avatar-section\\\">\\n        <img src=\\\"/images/avatar.png\\\" />\\n    </div>\\n    <div class=\\\"input-section form-group\\\">\\n        <div class=\\\"content-section\\\">\\n            <textarea class=\\\"form-control\\\" required ng-model=\\\"comment.content\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\n        </div>\\n        <div class=\\\"name-section\\\">\\n            <div class=\\\"name-container\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Your Name\\\" ng-model=\\\"comment.author.name\\\" />\\n                <button type=\\\"submit\\\" class=\\\"btn\\\">Post Comment</button>\\n                <span class=\\\"form-error\\\" ng-show=\\\"commentForm.$submitted && commentForm.$error\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> Make sure you fill in all the fields.\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\");\n$templateCache.put(\"templates/directives/poll.html\",\"<div class=\\\"poll-header\\\">\\n    <div class=\\\"header participants-header\\\">\\n        {{event.participants.length}} participants\\n    </div>\\n    <div class=\\\"header date-header\\\" ng-repeat=\\\"d in event.dates\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{d | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{d | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{d | date : \\'MMM\\'}}\\n            </div>\\n            <span class=\\\"count\\\" ng-show=\\\"selectedDate($index)\\\" ng-class={top:isTopDate($index)}>{{selectedDate($index)}}</span>\\n        </div>\\n    </div>\\n    <div class=\\\"header actions-header\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"poll-body\\\">\\n    <div class=\\\"poll-entry\\\" ng-repeat=\\\"participant in event.participants\\\">\\n        <form novalidate ng-submit=\\\"editMode = false; update(participant);\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{$index + 1}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input required autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"participant.name\\\" ng-show=\\\"editMode\\\" value=\\\"participant.name\\\"/>\\n                <span ng-hide=\\\"editMode\\\" class=\\\"name editable\\\" ng-click=\\\"editMode = true && !event.isClosed; edit(participant)\\\">{{participant.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"participant.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"!participant.votes[$index]\\\" />\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-show=\\\"editMode\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-show=\\\"editMode\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\" ng-hide=\\\"event.isClosed\\\">\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"editMode = true; edit(participant)\\\" class=\\\"btn hover\\\">Edit</button>\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"delete(participant)\\\" class=\\\"btn danger hover\\\">Delete</button>\\n                <button type=\\\"submit\\\" ng-show=\\\"editMode\\\" class=\\\"btn\\\">Save</button>\\n                <button type=\\\"button\\\" ng-show=\\\"editMode\\\" ng-click=\\\"editMode = false; cancel($index)\\\" class=\\\"btn\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"poll-example\\\" ng-class=\\\"{hidden : event.participants.length > 0}\\\">\\n        <div class=\\\"poll-entry\\\" ng-repeat=\\\"example in examples\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{$index + 1}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <span class=\\\"name\\\">{{example.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-if=\\\"example.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-if=\\\"!example.votes[$index]\\\" />\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\"overlay\\\">\\n            <div class=\\\"overlay-text\\\">\\n                Fill in the form below to get started\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-hide=\\\"event.isClosed\\\" class=\\\"poll-entry highlight\\\">\\n        <form novalidate name=\\\"formnew\\\" ng-submit=\\\"save()\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{participant.style}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input autocomplete=\\\"off\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Your name...\\\" ng-model=\\\"participant.name\\\" required value=\\\"participant.name\\\"/>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n                <button type=\\\"submit\\\" ng-class=\\\"{ \\'animated shake\\' : formnew.$submitted && formnew.$invalid  }\\\" class=\\\"btn\\\">Save</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/timePicker.html\",\"<div class=\\\"time-picker\\\">\\n    <div class=\\\"time-picker-col\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{date | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{date | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{date | date : \\'MMM\\'}}\\n            </div>\\n            <!-- <span class=\\\"delete\\\" ng-click=\\\"datepicker.unsetDate(date)\\\"></span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"time-picker-col\\\" ng-repeat=\\\"time in date.times track by $index\\\">\\n        <input type=\\\"text\\\" class=\\\"time-picker-input\\\" time-picker ng-model=\\\"time\\\" ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" />\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/dateForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Dates</div>\\n    <ul class=\\\"daticon-list\\\">\\n        <li ng-repeat=\\\"d in event.dates\\\">\\n            <div class=\\\"daticon\\\">\\n                <div class=\\\"dow\\\">\\n                    {{d | date: \\'EEE\\'}}\\n                </div>\\n                <div class=\\\"day\\\">\\n                    {{d | date: \\'d\\'}}\\n                </div>\\n                <div class=\\\"month\\\">\\n                    {{d | date : \\'MMM\\'}}\\n                </div>\\n                <span class=\\\"delete\\\" ng-click=\\\"datepicker.removeDate(d)\\\"></span>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Calendar</label>\\n            <span class=\\\"form-error\\\" ng-show=\\\"form.$submitted && form.datepicker.$error.required\\\">\\n                <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> You need to select a few dates\\n            </span>\\n            <div datepicker required name=\\\"datepicker\\\" control=\\\"datepicker\\\" ng-model=\\\"event.dates\\\">\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/eventForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Event Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"title\\\">Title</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.title.$touched || form.$submitted) && errors.title\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.title}}\\n                </span>\\n                <input id=\\\"title\\\" name=\\\"title\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.title\\\" type=\\\"text\\\" placeholder=\\\"Monthly Meetup...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group optional\\\">\\n                <label for=\\\"location\\\">Location</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.location.$touched || form.$submitted) && errors.location\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.location}}\\n                </span>\\n                <input id=\\\"location\\\" name=\\\"location\\\" ng-model=\\\"event.location\\\" ng-maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Rick\\'s Cafe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label for=\\\"description\\\" >Description</label>\\n            <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"event.description\\\" placeholder=\\\"Enter Description...\\\" class=\\\"form-control extend\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/participantsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Invite Participants</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label>Participant\\'s Emails</label>\\n            <tags-input max-length=\\\"50\\\" allowed-tags-pattern=\\\"{{emailRegex}}\\\" display-property=\\\"email\\\" ng-model=\\\"event.emails\\\" placeholder=\\\"Add an Email\\\" type=\\\"email\\\" autocomplete=\\\"off\\\"></tags-input>\\n            <input type=\\\"hidden\\\" name=\\\"shouldCreate\\\" value=\\\"true\\\" />\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/settingsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Settings</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Poll Status\\n            </div>\\n            <div class=\\\"description\\\">\\n                Let people vote on the poll.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.isClosed ? \\'Closed\\' : \\'Open\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.isClosed\\\" invert>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Notifications\\n            </div>\\n            <div class=\\\"description\\\">\\n                Send email notifications to the creator of this event.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.creator.allowNotifications ? \\'Enabled\\' : \\'Disabled\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.creator.allowNotifications\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Delete Event\\n            </div>\\n            <div class=\\\"description\\\">\\n                Once you delete an event it will no longer be accessible.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"deleteEvent()\\\" class=\\\"btn\\\" ng-class=\\\"{danger : !deleteRequestSent, disabled : deleteRequestSent}\\\">{{deleteRequestSent ? \\'Request Sent\\' : \\'Delete Event\\' }}</button>\\n        </div>\\n    </div>\\n</div>\\n</section>\\n\");\n$templateCache.put(\"templates/form/timeForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Times</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <table class=\\\"time-form\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n\\n                </th>\\n                <th>\\n                    Time 1\\n                </th>\\n                <th>\\n                    Time 2\\n                </th>\\n                <th>\\n                    Time 3\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr ng-repeat=\\\"d in event.dates\\\">\\n                <td>\\n                    <div class=\\\"daticon\\\">\\n                        <div class=\\\"dow\\\">\\n                            {{d.date | date: \\'EEE\\'}}\\n                        </div>\\n                        <div class=\\\"day\\\">\\n                            {{d.date | date: \\'d\\'}}\\n                        </div>\\n                        <div class=\\\"month\\\">\\n                            {{d.date | date : \\'MMM\\'}}\\n                        </div>\\n                        <span class=\\\"delete\\\" ng-click=\\\"unsetDate(d.date)\\\"></span>\\n                    </div>\\n                </td>\\n                <td ng-repeat=\\\"time in [1,2,3] track by $index\\\">\\n                    <input type=\\\"text\\\" time-picker ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" ng-model=\\\"d.times[$index]\\\" class=\\\"time-picker-input\\\" />\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\");\n$templateCache.put(\"templates/form/userForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Your Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.name.$touched || form.$submitted) && errors.name\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.name}}\\n                </span>\\n                <input id=\\\"name\\\" name=\\\"name\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.creator.name\\\" type=\\\"text\\\" placeholder=\\\"John Doe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.email.$touched || form.$submitted) && errors.email\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.email}}\\n                </span>\\n                <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ng-pattern=\\\"emailRegex\\\" required ng-model=\\\"event.creator.email\\\" placeholder=\\\"john.doe@email.com...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");}]);","angular.module('rallly')\n.controller('AboutCtrl', function(Title){\n    Title.set('About Rallly')\n});\n","angular.module('rallly')\n.controller('AccountCtrl', function($scope, ConfirmModal){\n    $scope.showNotice = function(){\n        \n    }\n})\n","angular.module('rallly')\n.controller('DeletionCtrl', function($state, Notification, Event){\n    Event.destroy({id : $state.params.id, code :$state.params.code}, function(){\n        var notification = new Notification({\n            title : 'Event deleted',\n            message : 'This event has been deleted',\n            type : 'success',\n            timeout : 5000\n        });\n    }, function(e){\n        var notification = new Notification({\n            title : 'Deletion Failed',\n            message : 'The event could not be deleted. Make sure that it exists and that the url is correct',\n            type : 'error'\n        });\n    });\n    $state.go('event', { id : $state.params.id });\n});\n","angular.module('rallly')\n.controller('EditEventCtrl', function($scope, $http, $state, $timeout, Event, ConfirmModal, Notification, Title){\n    var id = $state.params.id\n    $scope.event = Event.get({id:id}, function(data){        \n        Title.set(\"Edit: \" + $scope.event.title);\n        $scope.master = angular.copy($scope.event);\n    }, function(e){\n        $state.go('notfound');\n    });\n    $scope.undoChanges = function(){\n        $scope.event = angular.copy($scope.master);\n    }\n    $scope.didChange = function(){\n        return JSON.stringify($scope.master) != JSON.stringify($scope.event);\n    }\n    $scope.didChangeDates = function(){\n        return JSON.stringify($scope.master.dates) != JSON.stringify($scope.event.dates);\n    }\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            if ($scope.didChangeDates() ){\n                var modal = new ConfirmModal({\n                    title : 'Hold up!',\n                    message : 'Changing the dates will reset all entries by the participants. Are you sure you want to do that?',\n                    confirmText : 'Yes, I\\'m sure',\n                    isDestructive : true,\n                    confirm : function(){\n                        $scope.event.participants = [];\n                        update();\n                    }\n                });\n\n            } else {\n                update();\n            }\n        } else {\n            var notification = new Notification({\n                title : 'Not so fast',\n                message : 'Make sure you fill in all the required fields and try again.',\n                type : 'error'\n            });\n        }\n    }\n    var update = function(){\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var notification = new Notification({\n                title : 'Changes Saved',\n                message : 'Your changes have been saved successfully.',\n                type : 'success'\n            });\n            $scope.master = angular.copy($scope.event);\n        });\n    }\n});\n","angular.module('rallly')\n.controller('EventCtrl', function($scope, $http, $state, Title, Event, ConfirmModal){\n\n    var id = $state.params.id;\n    // Get Event\n    $scope.event = Event.get({id:id}, function(data){\n        // Set the page title to the event title\n        Title.set($scope.event.title);\n        // Generate event url - i.e. http://rallly.co/jF9F_Fd\n        $scope.eventUrl = $state.href('event', {\n            id: $scope.event._id\n        }, {\n            absolute : true\n        });\n    }, function(e){\n        $state.go('notfound');\n    });\n\n    $scope.openEvent = function(){\n        $scope.event.isClosed = false;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Open',\n                message : 'People can vote and comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.closeEvent = function(){\n        $scope.event.isClosed = true;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Closed',\n                message : 'People can no longer vote or comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.editEvent = function(){\n        $state.go('editevent', { id : $scope.event._id });\n    }\n\n});\n","angular.module('rallly')\n.controller('ExampleCtrl', function($state, Event){\n    // Generate dates\n    mixpanel.track(\"View Demo\");\n\n    var dates = [], date = new Date();\n    for (var i = 0; i < 4; i++){\n        dates.push(date.add(Math.ceil(Math.random() * 5)).days().toISOString());\n    }\n    // Generate Participants\n    var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n    var examples = [];\n    for (var i = 0; i < examplesNames.length; i++){\n        var example = { name : examplesNames[i] };\n        example.votes = [];\n        for (var j = 0; j <  dates.length; j++){\n            var answer = Math.random()<.5;\n            example.votes[j] = answer;\n        }\n        examples.push(example);\n    }\n    var event =  new Event({\n        \"creator\": {\n         \"name\": \"John Example\",\n         \"email\": \"rallly@lukevella.com\"\n        },\n        \"title\": \"Lunch Meeting\",\n        \"location\": \"Starbucks, 901 New York Avenue\",\n        \"description\": \"This event has been automatically generated just for you! Feel free to try out all the different features and when you're ready, you can schedule a new event.\",\n        \"dates\" : dates,\n        \"participants\" : examples,\n        \"emails\": [],\n        \"comments\" : [{\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Hey guys, this is a comment!\"\n        }, {\n            author : {\n                name : \"Mark Instance\"\n            },\n            content : \"Hi John... nice comment. Keep up the great work!\"\n        }, {\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Thank you!\"\n        }],\n        \"isExample\" : true\n    });\n    event.$save(function(data){\n\n        $state.go('event', { id : data._id }, {\n            location : \"replace\"\n        });\n    })\n});\n","angular.module('rallly')\n.controller('HomeCtrl', function($scope, $state, Title){\n    Title.set('Rallly - Collaborative Scheduling')\n\n    $scope.newEvent = function(){\n        $state.go('newevent');\n    }\n});\n","angular.module('rallly')\n.controller('NavigationCtrl', function($scope, $rootScope, $location, $document){\n    $scope.isActive = function(path) {\n        if ($location.path() == path) {\n            return true;\n        } else {\n            return false\n        }\n    }\n\n\n\n    var clickHandler = function(event){\n        var isClickedElementChildOfPopup = angular.element('.mobile-navigation').find(event.target).length > 0;\n        console.log(isClickedElementChildOfPopup);\n        if (isClickedElementChildOfPopup) return;\n        $scope.toggleMenu()\n    }\n\n    $rootScope.$on('$stateChangeSuccess', function(){\n        angular.element('body').removeClass('open-menu');\n        $document.unbind('click', clickHandler);\n    });\n\n    $scope.toggleMenu = function(){\n        console.log('click');\n        var isOpen = angular.element('body').hasClass('open-menu');\n        if (isOpen) {\n            angular.element('body').removeClass('open-menu');\n            $document.unbind('click', clickHandler);\n        } else {\n            angular.element('body').addClass('open-menu');\n            $document.bind('click', clickHandler);\n        }\n    }\n\n\n})\n","angular.module('rallly')\n.controller('NewEventCtrl', function($scope, $http, $state, Event, ConfirmModal, Notification){\n\n    $scope.title = \"Schedule a New Event\";\n    $scope.description = \"Fill in the form below to create your event and share it with your friends and colleagues.\";\n    $scope.event = {};\n\n\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            var newEvent = new Event($scope.event);\n            newEvent.$save()\n            .then(function(event){\n                $scope.event = event;\n                $scope.eventUrl = $state.href('event', {\n                    id: $scope.event._id\n                }, {\n                    absolute : true\n                });\n                $state.go('newevent.success');\n            }, function(){\n                var modal = new ConfirmModal({\n                    title : 'Uh oh!',\n                    message : 'There was an error creating your event. Please try again later.',\n                    cancelText : 'OK'\n                });\n            });\n        } else {\n            var notification = new Notification({\n                title : 'Hold on!',\n                message : 'Make sure you fill in all the required fields and that your data is correct.'\n            });\n        }\n    }\n\n});\n","angular.module('rallly')\n.controller('VerificationCtrl', function(Event, Notification, $state){\n    Event.verify({id : $state.params.id, code :$state.params.code}, function(){\n        var notification = new Notification({\n            title : 'Email Verified',\n            message : 'Your email has been verified. You will now be able to receive email notifications for this event',\n            type : 'success',\n            timeout : 5000\n        });\n    }, function(e){\n        var notification = new Notification({\n            title : 'Verification Failed',\n            message : 'Your verification code has expired.',\n            type : 'error'\n        });\n    });\n    $state.go('event', { id : $state.params.id }, {\n        location : \"replace\"\n    });\n\n});\n","angular.module('rallly')\n.directive('backImg', function(){\n    return function(scope, element, attrs){\n        var url = attrs.backImg;\n        element.css({\n            'background-image': 'url(/images/' + url +'.png)'\n        });\n    };\n})\n","angular.module('rallly')\n.directive('datepicker', function(){\n    return {\n        restrict : 'A',\n        require : 'ngModel',\n        scope : {\n            model : '=ngModel',\n            control : '='\n        },\n        templateUrl: 'templates/directives/datePicker.html',\n        link : function(scope, el, attrs, ngModel){\n            scope.model = scope.model || [];\n            scope.control = scope.control || {};\n\n            scope.$watch('model', function(newValue){\n                ngModel.$setViewValue(newValue);\n                ngModel.$validate();\n            }, true);\n\n            ngModel.$validators.required = function(modelValue, viewValue){\n                if (!modelValue || modelValue.length == 0){\n                    return false;\n                }\n                return true;\n            }\n\n            var today = Date.today(), activeDate = today.clone();\n            var setMonth = function(toDate){\n                activeDate = toDate;\n                var startDate = activeDate.clone().moveToFirstDayOfMonth(),\n                    startDateDOW = startDate.getDay();\n                startDate.add(startDateDOW - 7).days();\n                scope.title = activeDate.toString('MMMM yyyy');\n                var days = new Array(42);\n                for (var i = 0; i < days.length; i++){\n                    var date = startDate.clone().add(i).days()\n                    days[i] = {\n                        date : date,\n                        isOutsideMonth : (date.getMonth() != activeDate.getMonth()) ? true : false,\n                        isToday : (Date.equals(date, today))\n                    }\n                }\n                scope.days = days;\n            }\n            setMonth(activeDate);\n            scope.selectDay = function(dayObj){\n                if (dayObj.isOutsideMonth) {\n                    setMonth(dayObj.date);\n                }\n                if ((index = scope.isActive(dayObj.date, true)) != -1) {\n                    // Already selected\n                    scope.model.splice(index, 1); // remove\n                } else {\n                    // Not selected\n                    var index = 0, inserted = false;\n                    do {\n                        if (scope.model[index] == undefined || Date.compare(Date.parse(scope.model[index]), dayObj.date) > 0){\n                            scope.model.splice(index, 0, dayObj.date);\n                            inserted = true;\n                        }\n                        index++;\n                    } while (inserted == false);\n                }\n            }\n            scope.isActive = function(date, returnIndex){\n                scope.model = scope.model || [];\n                for (var i = 0; i < scope.model.length; i++){\n                    var modelDate = Date.parse(scope.model[i]);\n                    if (modelDate.getDate() == date.getDate() &&\n                        modelDate.getMonth() == date.getMonth() &&\n                        modelDate.getYear() == date.getYear()){\n                        return (returnIndex) ? i : true;\n                    }\n                }\n                return (returnIndex) ? -1 : false;\n            }\n            scope.nextMonth = function(){\n                setMonth(activeDate.add(1).months());\n            }\n            scope.prevMonth = function(){\n                setMonth(activeDate.add(-1).months());\n            }\n\n            scope.control.removeDate = function(date){\n                if ((index = scope.isActive(Date.parse(date), true)) != -1) {\n                    scope.model.splice(index, 1)\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('discussion', function($timeout, Comment, ConfirmModal){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/discussion.html',\n        scope : {\n            'event' : '='\n        },\n        link : function(scope, el, attrs){\n            scope.comment = {};\n            var thread = angular.element('.comment-thread');\n            $timeout(function(){\n                thread.scrollTop(thread.prop('scrollHeight'));\n            });\n            scope.deleteComment = function(comment){\n                var modal = new ConfirmModal({\n                    title : 'Are you sure?',\n                    message : 'Are you sure you want to remove this comment?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Comment.remove({ id : scope.event._id , cid : comment._id }, function(event){\n                            scope.event = event;\n                        });\n                    }\n                });\n            }\n            scope.postComment = function(){\n                if (scope.commentForm.$valid){\n                    var comment = new Comment(scope.comment);\n                    comment.$save({id:scope.event._id}, function(event){\n                        scope.event = event;\n                        scope.comment = {};\n                    });\n                    scope.commentForm.$setPristine();\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('dropdown', function($document){\n    return {\n        restrict : 'A',\n        link : function(scope, el, attrs){\n            el.addClass('dropdown');\n            scope.open = false;\n\n            var clickHandler = function(event){\n                var isClickedElementChildOfPopup = el.find(event.target).length > 0;\n                if (isClickedElementChildOfPopup) return;\n                scope.toggle();\n            }\n\n            scope.toggle = function(){\n                scope.open = !scope.open;\n                if (scope.open){\n                    el.addClass('open');\n                    $document.bind('click', clickHandler);\n                } else {\n                    el.removeClass('open');\n                    $document.unbind('click', clickHandler);\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.service('FormHelper', function(){\n    this.emailRegexString = '^([\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4})?$';\n    this.emailRegex = new RegExp(this.emailRegexString);\n    this.prettyError = function(errors, field){\n        if (errors.required) return field + \" is required\";\n        if (errors.pattern) return field + \" is invalid\" ;\n        if (errors.maxlength) return field + \" is too long\";\n        return false;\n    }\n})\n.directive('userForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/userForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.emailRegex = FormHelper.emailRegex;\n\n            scope.$watchCollection('form.name.$error',function(errors){\n                scope.errors.name = FormHelper.prettyError(errors, \"Name\");\n            });\n\n            scope.$watchCollection('form.email.$error',function(errors){\n                scope.errors.email = FormHelper.prettyError(errors, \"Email\");\n            });\n        }\n    }\n})\n.directive('eventForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/eventForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.$watchCollection('form.title.$error',function(errors){\n                scope.errors.title = FormHelper.prettyError(errors, \"Title\");\n            });\n\n            scope.$watchCollection('form.location.$error',function(errors){\n                scope.errors.location = FormHelper.prettyError(errors, \"Location\");\n            });\n\n        }\n    }\n})\n.directive('dateForm', function(){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/dateForm.html'\n    }\n})\n.directive('participantsForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/participantsForm.html',\n        link : function(scope, el, attrs){\n            scope.emailRegex = FormHelper.emailRegexString;\n        }\n    }\n})\n.directive('settingsForm', function(Event, ConfirmModal){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/settingsForm.html',\n        link : function(scope, el, attrs){\n            scope.deleteEvent = function(){\n                if (scope.deleteRequestSent) return;\n                Event.delete({'id' : scope.event._id}, function(){\n                    scope.deleteRequestSent = true;\n                    var modal = new ConfirmModal({\n                        title : 'Delete Request Sent',\n                        message : 'An email has been sent to the creator of this event with instructions to delete it.',\n                        cancelText : 'OK'\n                    });\n                });\n            }\n        }\n    }\n})\n.directive('switchToggle', function(){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel) {\n            el.addClass('switch-toggle');\n            var setClass = function(){\n                if (scope.model ^ typeof(attrs.invert) !== 'undefined'){\n                    el.addClass('active');\n                } else {\n                    el.removeClass('active');\n                }\n            }\n            scope.$watch('model', setClass);\n            el.bind('click', function(e){\n                scope.model = !scope.model;\n                ngModel.$setViewValue(scope.model, e);\n            });\n        }\n    }\n})\n.directive('timeForm', function(DatePickerService){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/timeForm.html',\n        link : function(scope, el, attrs){\n            var init = false;\n            var dateService;\n            var deregister = scope.$watch('event.dates', function(value){\n                if (value && !init) {\n                    deregister();\n                }\n                init = true;\n                dateService = new DatePickerService(scope.event.dates);\n                scope.unsetDate = function(date){\n                    dateService.removeDate(date);\n                }\n            });\n        }\n    }\n})\n.directive('timePicker', function($timeout){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel){\n            ngModel.$viewChangeListeners.push(function(){\n                scope.model = ngModel.$modelValue;\n            });\n\n            ngModel.$parsers.push(function (value) {\n                if (!value) return;\n                return Date.parse(value);\n            });\n\n            ngModel.$validators.time = function(modelValue, viewValue){\n                if (ngModel.$isEmpty(modelValue)) return true;\n                var time = Date.parse(modelValue);\n                if (time) {\n                    ngModel.$setViewValue(time.toString(\"hh:mm tt\"));\n                    ngModel.$render();\n                    return true;\n                }\n                return false;\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('poll', function($timeout, Participant, ConfirmModal){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/poll.html',\n        scope : {\n            'event' : '='\n        },\n        link : function(scope, el, attrs){\n            scope.defaults = [];\n            scope.participant = {};\n            var datesCount = [];\n            scope.event.$promise.then(function(event){\n                var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n                var examples = [];\n                for (var i = 0; i < examplesNames.length; i++){\n                    var example = { name : examplesNames[i] };\n                    example.votes = [];\n                    for (var j = 0; j <  event.dates.length; j++){\n                        var answer = Math.random()<.5;\n                        example.votes[j] = answer;\n                    }\n                    examples.push(example);\n                }\n                scope.examples = examples;\n            })\n            scope.delete = function(participant){\n                var modal = new ConfirmModal({\n                    title : 'Delete ' + participant.name + '?',\n                    message : 'Are you sure you want to remove '+participant.name+' from the poll?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Participant.remove({ id : scope.event._id , pid : participant._id }, function(event){\n                            scope.event = event;\n                        });\n                    }\n                });\n            }\n            scope.isTopDate = function(index){\n                var count = datesCount[index];\n                for (var i = 0; i < datesCount.length; i++){\n                    if (datesCount[i] > count) return false;\n                }\n                return true;\n            }\n            scope.selectedDate = function(index){\n                datesCount[index] = 0;\n                for (var i = 0; i < scope.event.participants.length; i++){\n                    if (scope.event.participants[i].votes[index]) datesCount[index]++;\n                }\n                return datesCount[index];\n            }\n            scope.update = function(participant){\n                Participant.update({\n                    id : scope.event._id,\n                    pid : participant._id\n                }, participant);\n            }\n            scope.edit = function(participant){\n                scope.defaults[scope.event.participants.indexOf(participant)] = angular.copy(participant);\n            }\n            scope.cancel = function(index){\n                scope.event.participants[index] = scope.defaults[index];\n            }\n            scope.save = function(){\n                if (scope.formnew.$valid){\n                    var participant = new Participant(scope.participant);\n                    participant.$save({id:scope.event._id}, function(event){\n                        scope.event = event;\n                        scope.participant = {};\n                    });\n                    scope.formnew.$setPristine();\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.filter('elapsed', function($filter){\n    return function(date){\n        if (!date) return;\n        var time = Date.parse(date),\n            timeNow = new Date().getTime(),\n            difference = timeNow - time,\n            seconds = Math.floor(difference / 1000),\n            minutes = Math.floor(seconds / 60),\n            hours = Math.floor(minutes / 60),\n            days = Math.floor(hours / 24);\n        if (days > 30) {\n            return 'on ' + $filter('date')(date, 'MMMM d');\n        } else if (days > 1) {\n            return days + \" days ago\";\n        } else if (days == 1) {\n            return \"1 day ago\"\n        } else if (hours > 1) {\n            return hours + \" hours ago\";\n        } else if (hours == 1) {\n            return \"an hour ago\";\n        } else if (minutes > 1) {\n            return minutes + \" minutes ago\";\n        } else if (minutes == 1){\n            return \"a minute ago\";\n        } else {\n            return \"a few seconds ago\";\n        }\n    }\n})\n","angular.module('rallly')\n.factory('ConfirmModal', function(btfModal){\n\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/confirmmodal.html',\n            controllerAs : 'modal',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.confirm = (config.confirm) ? function(){config.confirm(); modal.deactivate()} : false;\n                this.cancel = modal.deactivate;\n                this.confirmText = config.confirmText || 'Confirm';\n                this.cancelText = config.cancelText || 'Cancel';\n                this.isDestructive = config.isDestructive;\n            }\n        });\n        modal.activate();\n        \n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n","angular.module('rallly')\n.factory('Notification', function($timeout, btfModal){\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/notification.html',\n            controllerAs : 'notification',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.close = modal.deactivate;\n                this.type = config.type;\n                var timeout = config.timeout || 5000;\n                $timeout(modal.deactivate, timeout);\n            }\n        });\n        modal.activate();\n\n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n"],"sourceRoot":"/source/"}