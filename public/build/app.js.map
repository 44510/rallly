{"version":3,"sources":["main.js","templates.js","filters/elapsed.filter.js","directives/backImg.directive.js","directives/datepicker.directive.js","directives/discussion.directive.js","directives/dropdown.directive.js","directives/form.directive.js","directives/poll.directive.js","controllers/about.controller.js","controllers/account.controller.js","controllers/editevent.controller.js","controllers/event.controller.js","controllers/example.controller.js","controllers/home.controller.js","controllers/navigation.controller.js","controllers/newevent.controller.js","controllers/verification.controller.js","services/communicator.service.js","services/modal.service.js","services/notification.service.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$locationProvider","html5Mode","otherwise","$injector","$state","get","go","state","url","templateUrl","controller","factory","$resource","id","update","method","verify","destroy","set","title","document","run","$templateCache","put","filter","$filter","date","time","Date","parse","timeNow","getTime","difference","seconds","Math","floor","minutes","hours","days","directive","scope","element","attrs","backImg","css","background-image","restrict","require","model","control","link","el","ngModel","$watch","newValue","$setViewValue","$validate","$validators","required","modelValue","length","today","activeDate","clone","setMonth","toDate","startDate","moveToFirstDayOfMonth","startDateDOW","getDay","add","toString","Array","i","isOutsideMonth","getMonth","isToday","equals","selectDay","dayObj","index","isActive","splice","inserted","undefined","compare","returnIndex","modelDate","getDate","getYear","nextMonth","months","prevMonth","removeDate","$timeout","Comment","ConfirmModal","Communicator","event","controllerAs","$scope","$rootScope","comment","author","$on","e","participant","name","this","deleteComment","message","confirmText","cancelText","isDestructive","confirm","remove","_id","cid","postComment","commentForm","$valid","$save","trigger","content","scrollToBottom","$setPristine","thread","scrollTop","prop","$document","addClass","open","clickHandler","isClickedElementChildOfPopup","find","target","toggle","bind","removeClass","unbind","service","emailRegexString","emailRegex","RegExp","prettyError","errors","field","pattern","maxlength","FormHelper","form","$watchCollection","email","location","Event","deleteEvent","isDeleted","setClass","DatePickerService","dateService","init","deregister","value","dates","unsetDate","$viewChangeListeners","push","$modelValue","$parsers","$isEmpty","$render","Participant","defaults","didVote","pid","edit","participants","indexOf","copy","cancel","save","formnew","datesCount","$promise","then","examplesNames","examples","example","votes","j","answer","random","isTopDate","count","selectedDate","Title","showNotice","$http","Notification","params","master","undoChanges","didChange","JSON","stringify","didChangeDates","submit","type","data","eventUrl","href","absolute","openEvent","isClosed","closeEvent","editEvent","ceil","toISOString","creator","allowNotifications","description","emails","comments","isExample","newEvent","$location","path","console","log","toggleMenu","isOpen","hasClass","code","timeout","$emit","apply","arguments","mixpanel","track","btfModal","modal","deactivate","activate","close"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('rallly', ['ui.router','ngResource','btford.modal','ngTagsInput','ngAnimate'])\n    .config(function($stateProvider, $urlRouterProvider, $locationProvider){\n        $locationProvider.html5Mode(true);\n        $urlRouterProvider.otherwise(function($injector, $location){\n            var $state = $injector.get('$state');\n            $state.go('notfound');\n        });\n        $stateProvider\n        .state('newevent',{\n            url : '/new',\n            templateUrl : 'templates/newevent.html',\n            controller : 'NewEventCtrl',\n        })\n        .state('deletedevent',{\n            templateUrl : 'templates/deletedevent.html',\n        })\n        .state('newevent.success', {\n            templateUrl : 'templates/newEvent/success.html'\n        })\n        .state('about', {\n            url : '/about',\n            templateUrl : 'templates/about.html',\n            controller : 'AboutCtrl'\n        })\n        .state('example', {\n            url : '/example',\n            controller : 'ExampleCtrl'\n        })\n        .state('notfound', {\n            templateUrl : 'templates/notfound.html'\n        })\n        .state('event',{\n            url : '/:id',\n            templateUrl : 'templates/event.html',\n            controller : 'EventCtrl'\n        })\n        .state('editevent', {\n            url: '/:id/edit',\n            templateUrl : 'templates/editevent.html',\n            controller : 'EditEventCtrl'\n        })\n        .state('verifyevent', {\n            url : '/verify/:id/code/:code',\n            controller : 'VerificationCtrl'\n        })\n        .state('deleteevent', {\n            url : '/delete/:id/code/:code',\n            controller : 'DeletionCtrl'\n        })\n    })\n    .factory('Event', function($resource){\n        return $resource('/api/event/:id', { id : '@_id' }, {\n            'update' : { method : 'PUT' },\n            'verify' : { method : 'GET', url : '/api/event/:id/code/:code' },\n            'destroy': { method : 'DELETE', url: '/api/event/:id/code/:code' }\n        });\n    })\n    .factory('Participant', function($resource){\n        return $resource('/api/event/:id/participant/:pid', { id: '@_id'}, {\n            'update' : { method : 'PUT' }\n        });\n    })\n    .factory('Comment', function($resource){\n        return $resource('/api/event/:id/comment/:cid', { id : '@_id' }, {\n            'update' : { method : 'PUT' }\n        })\n    })\n    .factory('Title', function(){\n        return {\n            set : function(title){\n                document.title = title;\n            }\n        }\n    });\n","angular.module(\"rallly\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"templates/about.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Frequently Asked Questions</div>\\n    <div class=\\\"box-description\\\">\\n        Want to find out more about Rallly? Check out the FAQs below.\\n    </div>    <h2>What is Rallly?</h2>\\n    <p>\\n        Rallly is a collaborative scheduling service that makes deciding on a date fast and easy. In other words, Rallly helps you and your friends decide on a date to host an event.\\n    </p>\\n    <h2>Why is it called Rallly?</h2>\\n    <p>\\n        The name is derived from the proper spelling of the word, &ldquo;rally&rdquo;. The Webster dictionary defines rally as, &ldquo;to muster for a common purpose&rdquo; which accurately describes the goal of this service. The inproper spelling can be attributed to the difficulty of finding short and meaningful domain names.\\n    </p>\\n    <h2>Who made this?</h2>\\n    <p>\\n        Rallly was created by <a href=\\\"http://lukevella.com\\\">Luke Vella</a>.\\n    </p>\\n</div>\\n\");\n$templateCache.put(\"templates/confirmmodal.html\",\"<div class=\\\"rl-modal-overlay\\\">\\n\\n<div class=\\\"rl-modal-position\\\">\\n\\n    <div class=\\\"rl-modal\\\">\\n        <div class=\\\"rl-modal-title\\\">{{modal.title}}</div>\\n        <div class=\\\"rl-modal-message\\\">\\n            {{modal.message}}\\n        </div>\\n        <div class=\\\"rl-modal-actions\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"modal.confirm()\\\" ng-show=\\\"modal.confirm\\\" class=\\\"btn\\\" ng-class=\\\"{danger : modal.isDestructive}\\\">{{modal.confirmText}}</button>\\n            <button type=\\\"button\\\" ng-click=\\\"modal.cancel()\\\"  class=\\\"btn\\\">{{modal.cancelText}}</button>\\n        </div>\\n    </div>\\n\\n</div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/deletedevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-message\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/bin.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Deleted</div>\\n        <div class=\\\"content\\\">\\n            This event has been deleted and is no longer accessible.\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/editevent.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box\\\">\\n\\n        <div class=\\\"box-title\\\">Edit Event</div>\\n        <div class=\\\"box-description\\\">\\n            You can makes changes to your existing event by changing the fields in the form below.\\n        </div>\\n\\n        <form novalidate name=\\\"form\\\" ng-submit=\\\"submit()\\\">\\n\\n            <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n            <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n            </section>\\n\\n            <div class=\\\"box-controls box-bottom-sticky\\\">\\n                <button type=\\\"submit\\\" ng-show=\\\"didChange()\\\" class=\\\"btn btn-primary\\\" ng-class=\\\"{disabled : !didChange()}\\\">\\n                    Save Changes\\n                </button>\\n                <button type=\\\"button\\\" ng-click=\\\"undoChanges()\\\" class=\\\"btn\\\" ng-show=\\\"didChange()\\\">Undo Changes</button>\\n                <a href=\\\"/{{event._id}}\\\" class=\\\"btn\\\" ng-hide=\\\"didChange()\\\">Done</a>\\n            </div>\\n\\n        </form>\\n\\n    </div>\\n\\n</div>\\n\");\n$templateCache.put(\"templates/event.html\",\"<div ng-show=\\\"event._id\\\">\\n    <div class=\\\"box \\\">\\n        <div class=\\\"event-header\\\">\\n            <div class=\\\"details\\\">\\n                <div class=\\\"title\\\">\\n                    {{event.title}}\\n                    <span class=\\\"title-label danger\\\" ng-show=\\\"event.isClosed\\\">Poll Closed</span>\\n                    <span class=\\\"title-label success\\\" ng-hide=\\\"event.isClosed\\\">Poll Open</span>\\n                </div>\\n                <div class=\\\"subtitle\\\">\\n                    Created by <a href=\\\"mailto:{{event.creator.email}}\\\">{{event.creator.name}}</a>\\n                    &bull; {{event.created | elapsed}}\\n                    &bull; <a href=\\\"#\\\" ng-click=\\\"editEvent()\\\">Edit Details</a>\\n                </div>\\n            </div>\\n            <div class=\\\"actions\\\">\\n                <button class=\\\"btn\\\" ng-click=\\\"editEvent()\\\">Edit Event</button>\\n            </div>\\n        </div>\\n        <div class=\\\"event-description\\\" ng-if=\\\"event.description\\\">{{event.description}}</div>\\n        <div class=\\\"event-location\\\" ng-if=\\\"event.location\\\">\\n            Location:\\n            <a  href=\\\"http://maps.google.com?q={{event.location}}\\\"  target=\\\"_blank\\\">{{event.location}}</a>\\n        </div>\\n\\n        <div class=\\\"poll-wrapper\\\">\\n            <div poll event=\\\"event\\\" class=\\\"poll\\\">\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"box\\\" ng-hide=\\\"event.comments.length == 0 && event.isClosed\\\">\\n        <div class=\\\"box-title\\\">\\n            Discussion\\n        </div>\\n        <div class=\\\"box-description\\\">\\n            You can discuss the event with your friends by leaving a comment below.\\n        </div>\\n        <div discussion event=\\\"event\\\">\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/home.html\",\"<div class=\\\"page-placeholder\\\">\\n    <div class=\\\"image\\\">\\n        <img src=\\\"/images/mark_large.png\\\" width=\\\"67\\\" />\\n    </div>\\n    <div class=\\\"title\\\">\\n        Schedule an Event\\n    </div>\\n    <div class=\\\"content\\\">\\n        Want to host an event but can’t decide on a date? Click on the button below to start!\\n    </div>\\n    <button ng-click=\\\"newEvent()\\\" class=\\\"btn\\\">Schedule New Event</button>\\n</div>\\n\");\n$templateCache.put(\"templates/newevent.html\",\"<div class=\\\"box\\\">\\n    <div class=\\\"box-title\\\">Schedule a New Event</div>\\n    <div class=\\\"box-description\\\">\\n        Fill in the form below to create your event and share it with your friends and colleagues.\\n    </div>\\n    <form novalidate autocomplete=\\\"off\\\" name=\\\"form\\\" ng-hide=\\\"eventUrl\\\" ng-submit=\\\"submit()\\\">\\n        <section class=\\\"box-section\\\" user-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" event-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" date-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" participants-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <section class=\\\"box-section\\\" settings-form form=\\\"form\\\" event=\\\"event\\\">\\n\\n        </section>\\n\\n        <div class=\\\"box-controls box-bottom-sticky\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn\\\">Create Event</button>\\n        </div>\\n\\n    </form>\\n    <div class=\\\"box-message animated zoomIn\\\" ng-show=\\\"eventUrl\\\">\\n        <div class=\\\"main-image\\\">\\n            <img src=\\\"/images/success_large.png\\\" width=\\\"100\\\" />\\n        </div>\\n        <div class=\\\"title\\\">Event Created</div>\\n        <div class=\\\"content\\\">\\n            Your event has been created successfully! An email has been sent to each participant with a link to the event page. \\n        </div>\\n        <div class=\\\"mini-divider\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"true\\\" value=\\\"{{eventUrl}}\\\" />\\n            <a href=\\\"{{eventUrl}}\\\" class=\\\"btn form-btn\\\">GO</a>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/notfound.html\",\"<div class=\\\"not-found\\\">\\n    <video id=\\\"gfyVid1\\\" class=\\\"gfyVid\\\" width=\\\"480\\\" height=\\\"360\\\" autoplay=\\\"\\\" loop=\\\"\\\" muted=\\\"muted\\\" style=\\\"display: block;\\\" poster=\\\"//thumbs.gfycat.com/PaltryComfortableBaldeagle-poster.jpg\\\">\\n            <source id=\\\"webmsource\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.webm\\\" type=\\\"video/webm\\\">\\n            <source id=\\\"mp4source\\\" src=\\\"//zippy.gfycat.com/PaltryComfortableBaldeagle.mp4\\\" type=\\\"video/mp4\\\">\\n            Sorry, you don\\'t have HTML5 video and we didn\\'t catch this properly in javascript.\\n            You can try to view the gif directly: <a href=\\\"http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif\\\">http://zippy.gfycat.com/PaltryComfortableBaldeagle.gif</a>.\\n        </video>\\n    <div class=\\\"overlay\\\">\\n        <div class=\\\"wrapper\\\">\\n            <div class=\\\"title\\\">Error 404 </div>\\n            <div class=\\\"description\\\">The page you are looking for could not be found!</h2>\\n            <div class=\\\"actions\\\">\\n                <a href=\\\"/\\\" target=\\\"_self\\\">Go to Homepage</a>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/notification.html\",\"<div class=\\\"notification {{notification.type}}\\\" ng-click=\\\"notification.close()\\\">\\n    <div class=\\\"title\\\">\\n        {{notification.title}}\\n    </div>\\n    <div class=\\\"message\\\">\\n        {{notification.message}}\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/datePicker.html\",\"<div class=\\\"date-picker\\\">\\n    <div class=\\\"wrapper\\\">\\n        <div class=\\\"date-picker-head\\\">\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"prevMonth()\\\">&#10094;</a>\\n            <span class=\\\"title\\\">\\n                <span class=\\\"title-text\\\">{{title}}</span>\\n            </span>\\n            <a href=\\\"#\\\" class=\\\"arrow\\\" ng-click=\\\"nextMonth()\\\">&#10095;</a>\\n        </div>\\n        <div class=\\\"dow\\\">\\n            <div class=\\\"day\\\">\\n                Su\\n            </div>\\n            <div class=\\\"day\\\">\\n                Mo\\n            </div>\\n            <div class=\\\"day\\\">\\n                Tu\\n            </div>\\n            <div class=\\\"day\\\">\\n                We\\n            </div>\\n            <div class=\\\"day\\\">\\n                Th\\n            </div>\\n            <div class=\\\"day\\\">\\n                Fr\\n            </div>\\n            <div class=\\\"day\\\">\\n                Sa\\n            </div>\\n        </div>\\n        <div class=\\\"values\\\">\\n            <div ng-repeat=\\\"day in days\\\" class=\\\"value\\\"  ng-class=\\\"{ outside : day.isOutsideMonth, today : day.isToday, active : isActive(day.date) }\\\" ng-click=\\\"selectDay(day)\\\">\\n                {{day.date | date : \\'d\\' }}\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/discussion.html\",\"<ul class=\\\"comment-thread\\\" ng-show=\\\"event.comments.length\\\">\\n    <li ng-repeat=\\\"comment in event.comments\\\" class=\\\"comment\\\">\\n        <div class=\\\"avatar-section\\\">\\n            <img src=\\\"/images/avatar.png\\\" />\\n        </div>\\n        <div class=\\\"comment-section\\\">\\n            <a href=\\\"#\\\" class=\\\"comment-delete\\\" ng-click=\\\"discussionCtrl.deleteComment(comment)\\\">&times;</a>\\n            <div class=\\\"meta\\\">\\n                <span class=\\\"name\\\">{{comment.author.name}}</span>\\n                <span class=\\\"time\\\">{{comment.created | elapsed}}</span>\\n            </div>\\n            <div class=\\\"content\\\">{{comment.content}}</div>\\n        </div>\\n    </li>\\n</ul>\\n<form novalidate ng-submit=\\\"discussionCtrl.postComment()\\\" name=\\\"commentForm\\\" class=\\\"comment-form\\\">\\n    <div class=\\\"avatar-section\\\">\\n        <img src=\\\"/images/avatar.png\\\" />\\n    </div>\\n    <div class=\\\"input-section form-group\\\">\\n        <div class=\\\"content-section\\\">\\n            <textarea class=\\\"form-control\\\" required ng-model=\\\"comment.content\\\" placeholder=\\\"Write a comment...\\\"></textarea>\\n        </div>\\n        <div class=\\\"name-section\\\">\\n            <div class=\\\"name-container\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" required placeholder=\\\"Your Name\\\" ng-model=\\\"comment.author.name\\\" />\\n                <button type=\\\"submit\\\" class=\\\"btn\\\">Post Comment</button>\\n                <span class=\\\"form-error\\\" ng-show=\\\"commentForm.$submitted && commentForm.$error\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> Make sure you fill in all the fields.\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n</form>\\n\");\n$templateCache.put(\"templates/directives/poll.html\",\"<div class=\\\"poll-header\\\">\\n    <div class=\\\"header participants-header\\\">\\n        {{event.participants.length}} participants\\n    </div>\\n    <div class=\\\"header date-header\\\" ng-repeat=\\\"d in event.dates\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{d | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{d | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{d | date : \\'MMM\\'}}\\n            </div>\\n            <span class=\\\"count\\\" ng-show=\\\"selectedDate($index)\\\" ng-class={top:isTopDate($index)}>{{selectedDate($index)}}</span>\\n        </div>\\n    </div>\\n    <div class=\\\"header actions-header\\\">\\n\\n    </div>\\n</div>\\n<div class=\\\"poll-body\\\">\\n    <div class=\\\"poll-entry\\\" ng-repeat=\\\"participant in event.participants\\\">\\n        <form novalidate ng-submit=\\\"editMode = false; pollCtrl.update(participant);\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{($index % 10) + 1 }}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input required autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" ng-model=\\\"participant.name\\\" ng-show=\\\"editMode\\\" value=\\\"participant.name\\\"/>\\n                <span ng-hide=\\\"editMode\\\" class=\\\"name editable\\\" ng-click=\\\"editMode = true && !event.isClosed; pollCtrl.edit(participant)\\\">{{participant.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"participant.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-hide=\\\"editMode\\\" ng-if=\\\"!participant.votes[$index]\\\" />\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-show=\\\"editMode\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-show=\\\"editMode\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\" ng-hide=\\\"event.isClosed\\\">\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"editMode = true; pollCtrl.edit(participant)\\\" class=\\\"btn hover\\\">Edit</button>\\n                <button type=\\\"button\\\" ng-hide=\\\"editMode\\\" ng-click=\\\"pollCtrl.delete(participant)\\\" class=\\\"btn danger hover\\\">Delete</button>\\n                <button type=\\\"submit\\\" ng-show=\\\"editMode\\\" class=\\\"btn\\\">Save</button>\\n                <button type=\\\"button\\\" ng-show=\\\"editMode\\\" ng-click=\\\"editMode = false; pollCtrl.cancel($index)\\\" class=\\\"btn\\\">Cancel</button>\\n            </div>\\n        </form>\\n    </div>\\n    <div class=\\\"poll-example\\\" ng-class=\\\"{hidden : event.participants.length > 0}\\\">\\n        <div class=\\\"poll-entry\\\" ng-repeat=\\\"example in examples\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{$index + 1}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <span class=\\\"name\\\">{{example.name}}</span>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <img src=\\\"/images/tick@2x.png\\\"  width=\\\"16\\\" ng-if=\\\"example.votes[$index]\\\" />\\n                <img src=\\\"/images/nope@2x.png\\\" width=\\\"8\\\" ng-if=\\\"!example.votes[$index]\\\" />\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n\\n            </div>\\n        </div>\\n        <div class=\\\"overlay\\\">\\n            <div class=\\\"overlay-text\\\">\\n                Fill in the form below to get started\\n            </div>\\n        </div>\\n    </div>\\n    <div ng-hide=\\\"event.isClosed\\\" class=\\\"poll-entry highlight\\\">\\n        <form novalidate name=\\\"formnew\\\" ng-submit=\\\"pollCtrl.save()\\\">\\n            <div class=\\\"cell name-cell\\\">\\n                <span class=\\\"avatar style-{{participant.style}}\\\">\\n                    <img src=\\\"/images/user.png\\\" width=\\\"11\\\" />\\n                </span>\\n                <input autocomplete=\\\"off\\\" name=\\\"username\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Your name...\\\" ng-model=\\\"participant.name\\\" required value=\\\"participant.name\\\"/>\\n            </div>\\n            <div class=\\\"cell vote-cell\\\" ng-repeat=\\\"date in event.dates\\\">\\n                <input ng-model=\\\"participant.votes[$index]\\\" ng-false-value=\\\"false\\\" type=\\\"checkbox\\\" />\\n                <div class=\\\"overlay\\\" ng-click=\\\"participant.votes[$index] = !participant.votes[$index]\\\"></div>\\n            </div>\\n            <div class=\\\"cell action-cell\\\">\\n                <button type=\\\"submit\\\" ng-class=\\\"{ \\'animated shake\\' : formnew.$submitted && formnew.$invalid  }\\\" class=\\\"btn\\\">Save</button>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/directives/timePicker.html\",\"<div class=\\\"time-picker\\\">\\n    <div class=\\\"time-picker-col\\\">\\n        <div class=\\\"daticon\\\">\\n            <div class=\\\"dow\\\">\\n                {{date | date: \\'EEE\\'}}\\n            </div>\\n            <div class=\\\"day\\\">\\n                {{date | date: \\'d\\'}}\\n            </div>\\n            <div class=\\\"month\\\">\\n                {{date | date : \\'MMM\\'}}\\n            </div>\\n            <!-- <span class=\\\"delete\\\" ng-click=\\\"datepicker.unsetDate(date)\\\"></span> -->\\n        </div>\\n    </div>\\n    <div class=\\\"time-picker-col\\\" ng-repeat=\\\"time in date.times track by $index\\\">\\n        <input type=\\\"text\\\" class=\\\"time-picker-input\\\" time-picker ng-model=\\\"time\\\" ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" />\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/dateForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Dates</div>\\n    <ul class=\\\"daticon-list\\\">\\n        <li ng-repeat=\\\"d in event.dates\\\">\\n            <div class=\\\"daticon\\\">\\n                <div class=\\\"dow\\\">\\n                    {{d | date: \\'EEE\\'}}\\n                </div>\\n                <div class=\\\"day\\\">\\n                    {{d | date: \\'d\\'}}\\n                </div>\\n                <div class=\\\"month\\\">\\n                    {{d | date : \\'MMM\\'}}\\n                </div>\\n                <span class=\\\"delete\\\" ng-click=\\\"datepicker.removeDate(d)\\\"></span>\\n            </div>\\n        </li>\\n    </ul>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\">Calendar</label>\\n            <span class=\\\"form-error\\\" ng-show=\\\"form.$submitted && form.datepicker.$error.required\\\">\\n                <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> You need to select a few dates\\n            </span>\\n            <div datepicker required name=\\\"datepicker\\\" control=\\\"datepicker\\\" ng-model=\\\"event.dates\\\">\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/eventForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Event Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"title\\\">Title</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.title.$touched || form.$submitted) && errors.title\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.title}}\\n                </span>\\n                <input id=\\\"title\\\" name=\\\"title\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.title\\\" type=\\\"text\\\" placeholder=\\\"Monthly Meetup...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group optional\\\">\\n                <label for=\\\"location\\\">Location</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.location.$touched || form.$submitted) && errors.location\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.location}}\\n                </span>\\n                <input id=\\\"location\\\" name=\\\"location\\\" ng-model=\\\"event.location\\\" ng-maxlength=\\\"50\\\" type=\\\"text\\\" placeholder=\\\"Rick\\'s Cafe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label for=\\\"description\\\" >Description</label>\\n            <textarea id=\\\"description\\\" name=\\\"description\\\" ng-model=\\\"event.description\\\" placeholder=\\\"Enter Description...\\\" class=\\\"form-control extend\\\"></textarea>\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/participantsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Invite Participants</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-group optional\\\">\\n            <label>Participant\\'s Emails</label>\\n            <tags-input max-length=\\\"50\\\" allowed-tags-pattern=\\\"{{emailRegex}}\\\" display-property=\\\"email\\\" ng-model=\\\"event.emails\\\" placeholder=\\\"Add an Email\\\" type=\\\"email\\\" autocomplete=\\\"off\\\"></tags-input>\\n            <input type=\\\"hidden\\\" name=\\\"shouldCreate\\\" value=\\\"true\\\" />\\n\\n        </div>\\n    </div>\\n</div>\\n\");\n$templateCache.put(\"templates/form/settingsForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Settings</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Poll Status\\n            </div>\\n            <div class=\\\"description\\\">\\n                Let people vote on the poll.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.isClosed ? \\'Closed\\' : \\'Open\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.isClosed\\\" invert>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Notifications\\n            </div>\\n            <div class=\\\"description\\\">\\n                Send me an email when someone votes or comments on the event.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <div class=\\\"switch-value\\\">\\n                {{event.creator.allowNotifications ? \\'Enabled\\' : \\'Disabled\\' }}\\n            </div>\\n            <div switch-toggle ng-model=\\\"event.creator.allowNotifications\\\">\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"switch-row\\\" ng-if=\\\"event._id\\\">\\n        <div class=\\\"switch-details\\\">\\n            <div class=\\\"title\\\">\\n                Delete Event\\n            </div>\\n            <div class=\\\"description\\\">\\n                Once you delete an event it will no longer be accessible.\\n            </div>\\n        </div>\\n        <div class=\\\"switch\\\">\\n            <button type=\\\"button\\\" ng-click=\\\"deleteEvent()\\\" class=\\\"btn\\\" ng-class=\\\"{danger : !deleteRequestSent, disabled : deleteRequestSent}\\\">{{deleteRequestSent ? \\'Request Sent\\' : \\'Delete Event\\' }}</button>\\n        </div>\\n    </div>\\n</div>\\n</section>\\n\");\n$templateCache.put(\"templates/form/timeForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Choose Times</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <table class=\\\"time-form\\\">\\n        <thead>\\n            <tr>\\n                <th>\\n\\n                </th>\\n                <th>\\n                    Time 1\\n                </th>\\n                <th>\\n                    Time 2\\n                </th>\\n                <th>\\n                    Time 3\\n                </th>\\n            </tr>\\n        </thead>\\n        <tbody>\\n            <tr ng-repeat=\\\"d in event.dates\\\">\\n                <td>\\n                    <div class=\\\"daticon\\\">\\n                        <div class=\\\"dow\\\">\\n                            {{d.date | date: \\'EEE\\'}}\\n                        </div>\\n                        <div class=\\\"day\\\">\\n                            {{d.date | date: \\'d\\'}}\\n                        </div>\\n                        <div class=\\\"month\\\">\\n                            {{d.date | date : \\'MMM\\'}}\\n                        </div>\\n                        <span class=\\\"delete\\\" ng-click=\\\"unsetDate(d.date)\\\"></span>\\n                    </div>\\n                </td>\\n                <td ng-repeat=\\\"time in [1,2,3] track by $index\\\">\\n                    <input type=\\\"text\\\" time-picker ng-model-options=\\\"{ updateOn: \\'blur\\' }\\\" ng-model=\\\"d.times[$index]\\\" class=\\\"time-picker-input\\\" />\\n                </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n</div>\\n\");\n$templateCache.put(\"templates/form/userForm.html\",\"<div class=\\\"section-details\\\">\\n    <div class=\\\"section-title\\\">Your Details</div>\\n</div>\\n<div class=\\\"section-main\\\">\\n    <div class=\\\"form-row\\\">\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"name\\\">Name</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.name.$touched || form.$submitted) && errors.name\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.name}}\\n                </span>\\n                <input id=\\\"name\\\" name=\\\"name\\\" ng-maxlength=\\\"30\\\" required ng-model=\\\"event.creator.name\\\" type=\\\"text\\\" placeholder=\\\"John Doe...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n        <div class=\\\"form-col\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email</label>\\n                <span class=\\\"form-error\\\" ng-show=\\\"(form.email.$touched || form.$submitted) && errors.email\\\">\\n                    <img src=\\\"/images/error.png\\\" width=\\\"14\\\" /> {{errors.email}}\\n                </span>\\n                <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" ng-pattern=\\\"emailRegex\\\" required ng-model=\\\"event.creator.email\\\" placeholder=\\\"john.doe@email.com...\\\" class=\\\"form-control extend\\\"/>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\");}]);","angular.module('rallly')\n.filter('elapsed', function($filter){\n    return function(date){\n        if (!date) return;\n        var time = Date.parse(date),\n            timeNow = new Date().getTime(),\n            difference = timeNow - time,\n            seconds = Math.floor(difference / 1000),\n            minutes = Math.floor(seconds / 60),\n            hours = Math.floor(minutes / 60),\n            days = Math.floor(hours / 24);\n        if (days > 30) {\n            return 'on ' + $filter('date')(date, 'MMMM d');\n        } else if (days > 1) {\n            return days + \" days ago\";\n        } else if (days == 1) {\n            return \"1 day ago\"\n        } else if (hours > 1) {\n            return hours + \" hours ago\";\n        } else if (hours == 1) {\n            return \"an hour ago\";\n        } else if (minutes > 1) {\n            return minutes + \" minutes ago\";\n        } else if (minutes == 1){\n            return \"a minute ago\";\n        } else {\n            return \"a few seconds ago\";\n        }\n    }\n})\n","angular.module('rallly')\n.directive('backImg', function(){\n    return function(scope, element, attrs){\n        var url = attrs.backImg;\n        element.css({\n            'background-image': 'url(/images/' + url +'.png)'\n        });\n    };\n})\n","angular.module('rallly')\n.directive('datepicker', function(){\n    return {\n        restrict : 'A',\n        require : 'ngModel',\n        scope : {\n            model : '=ngModel',\n            control : '='\n        },\n        templateUrl: 'templates/directives/datePicker.html',\n        link : function(scope, el, attrs, ngModel){\n            scope.model = scope.model || [];\n            scope.control = scope.control || {};\n\n            scope.$watch('model', function(newValue){\n                ngModel.$setViewValue(newValue);\n                ngModel.$validate();\n            }, true);\n\n            ngModel.$validators.required = function(modelValue, viewValue){\n                if (!modelValue || modelValue.length == 0){\n                    return false;\n                }\n                return true;\n            }\n\n            var today = Date.today(), activeDate = today.clone();\n            var setMonth = function(toDate){\n                activeDate = toDate;\n                var startDate = activeDate.clone().moveToFirstDayOfMonth(), // get first day of active month\n                    startDateDOW = startDate.getDay(); // get day of the week for the active start date of the active month\n                // Set the startDate to the previous Sunday\n                if (startDateDOW == 0){\n                    startDate.add(-7).days();\n                } else {\n                    startDate.add(startDateDOW * -1).days();\n                }\n                scope.title = activeDate.toString('MMMM yyyy');\n                var days = new Array(42);\n                for (var i = 0; i < days.length; i++){\n                    var date = startDate.clone().add(i).days()\n                    days[i] = {\n                        date : date,\n                        isOutsideMonth : (date.getMonth() != activeDate.getMonth()) ? true : false,\n                        isToday : (Date.equals(date, today))\n                    }\n                }\n                scope.days = days;\n            }\n            setMonth(activeDate);\n            scope.selectDay = function(dayObj){\n                if (dayObj.isOutsideMonth) {\n                    setMonth(dayObj.date);\n                }\n                if ((index = scope.isActive(dayObj.date, true)) != -1) {\n                    // Already selected\n                    scope.model.splice(index, 1); // remove\n                } else {\n                    // Not selected\n                    var index = 0, inserted = false;\n                    do {\n                        if (scope.model[index] == undefined || Date.compare(Date.parse(scope.model[index]), dayObj.date) > 0){\n                            scope.model.splice(index, 0, dayObj.date);\n                            inserted = true;\n                        }\n                        index++;\n                    } while (inserted == false);\n                }\n            }\n            scope.isActive = function(date, returnIndex){\n                scope.model = scope.model || [];\n                for (var i = 0; i < scope.model.length; i++){\n                    var modelDate = Date.parse(scope.model[i]);\n                    if (modelDate.getDate() == date.getDate() &&\n                        modelDate.getMonth() == date.getMonth() &&\n                        modelDate.getYear() == date.getYear()){\n                        return (returnIndex) ? i : true;\n                    }\n                }\n                return (returnIndex) ? -1 : false;\n            }\n            scope.nextMonth = function(){\n                setMonth(activeDate.clone().add(1).months());\n            }\n            scope.prevMonth = function(){\n                setMonth(activeDate.clone().add(-1).months());\n            }\n\n            scope.control.removeDate = function(date){\n                if ((index = scope.isActive(Date.parse(date), true)) != -1) {\n                    scope.model.splice(index, 1)\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('discussion', function($timeout, Comment, ConfirmModal, Communicator){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/discussion.html',\n        scope : {\n            'event' : '='\n        },\n        controllerAs : 'discussionCtrl',\n        controller : function($scope, $rootScope){\n            $scope.comment = { author : {}, comment : '' };\n            $rootScope.$on('add:participant', function(e, event, participant){\n                $scope.comment.author.name = participant.name;\n            });\n            this.deleteComment = function(comment){\n                var modal = new ConfirmModal({\n                    title : 'Are you sure?',\n                    message : 'Are you sure you want to remove this comment?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Comment.remove({ id : $scope.event._id , cid : comment._id }, function(event){\n                            $scope.event = event;\n                        });\n                    }\n                });\n            }\n            this.postComment = function(){\n                if ($scope.commentForm.$valid){\n                    var comment = new Comment($scope.comment);\n                    comment.$save({id:$scope.event._id}, function(event){\n                        $scope.event = event;\n                        Communicator.trigger('add:comment', event, $scope.comment);\n                        $scope.comment.content = '';\n                        $timeout($scope.scrollToBottom);\n                    });\n                    $scope.commentForm.$setPristine();\n                }\n            }\n            $scope.scrollToBottom = function(){\n                var thread = angular.element('.comment-thread');\n                thread.scrollTop(thread.prop('scrollHeight'));\n            }\n        },\n        link : function(scope, el, attrs){\n            $timeout(scope.scrollToBottom);\n        }\n    }\n});\n","angular.module('rallly')\n.directive('dropdown', function($document){\n    return {\n        restrict : 'A',\n        link : function(scope, el, attrs){\n            el.addClass('dropdown');\n            scope.open = false;\n\n            var clickHandler = function(event){\n                var isClickedElementChildOfPopup = el.find(event.target).length > 0;\n                if (isClickedElementChildOfPopup) return;\n                scope.toggle();\n            }\n\n            scope.toggle = function(){\n                scope.open = !scope.open;\n                if (scope.open){\n                    el.addClass('open');\n                    $document.bind('click', clickHandler);\n                } else {\n                    el.removeClass('open');\n                    $document.unbind('click', clickHandler);\n                }\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.service('FormHelper', function(){\n    this.emailRegexString = '^([\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4})?$';\n    this.emailRegex = new RegExp(this.emailRegexString);\n    this.prettyError = function(errors, field){\n        if (errors.required) return field + \" is required\";\n        if (errors.pattern) return field + \" is invalid\" ;\n        if (errors.maxlength) return field + \" is too long\";\n        return false;\n    }\n})\n.directive('userForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/userForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.emailRegex = FormHelper.emailRegex;\n\n            scope.$watchCollection('form.name.$error',function(errors){\n                scope.errors.name = FormHelper.prettyError(errors, \"Name\");\n            });\n\n            scope.$watchCollection('form.email.$error',function(errors){\n                scope.errors.email = FormHelper.prettyError(errors, \"Email\");\n            });\n        }\n    }\n})\n.directive('eventForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/eventForm.html',\n        link : function(scope, el, attrs) {\n            scope.errors = {};\n\n            scope.$watchCollection('form.title.$error',function(errors){\n                scope.errors.title = FormHelper.prettyError(errors, \"Title\");\n            });\n\n            scope.$watchCollection('form.location.$error',function(errors){\n                scope.errors.location = FormHelper.prettyError(errors, \"Location\");\n            });\n\n        }\n    }\n})\n.directive('dateForm', function(){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/dateForm.html'\n    }\n})\n.directive('participantsForm', function(FormHelper){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/participantsForm.html',\n        link : function(scope, el, attrs){\n            scope.emailRegex = FormHelper.emailRegexString;\n        }\n    }\n})\n.directive('settingsForm', function(Event, ConfirmModal){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/settingsForm.html',\n        link : function(scope, el, attrs){\n            scope.deleteEvent = function(){\n                var modal = new ConfirmModal({\n                    title : 'Are you sure?',\n                    message : 'The event will no longer be accessible after it is deleted. Are you sure you want to continue?',\n                    isDestructive : true,\n                    confirmText : 'Yes - delete',\n                    cancelText : 'Cancel',\n                    confirm : function(){\n                        Event.delete({'id' : scope.event._id}, function(e){\n                            scope.event.isDeleted = true;\n                        });\n                    }\n                });\n            }\n        }\n    }\n})\n.directive('switchToggle', function(){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel) {\n            el.addClass('switch-toggle');\n            var setClass = function(){\n                if (scope.model ^ typeof(attrs.invert) !== 'undefined'){\n                    el.addClass('active');\n                } else {\n                    el.removeClass('active');\n                }\n            }\n            scope.$watch('model', setClass);\n            el.bind('click', function(e){\n                scope.model = !scope.model;\n                ngModel.$setViewValue(scope.model, e);\n            });\n        }\n    }\n})\n.directive('timeForm', function(DatePickerService){\n    return {\n        scope : {\n            event : '=',\n            form : '='\n        },\n        templateUrl : 'templates/form/timeForm.html',\n        link : function(scope, el, attrs){\n            var init = false;\n            var dateService;\n            var deregister = scope.$watch('event.dates', function(value){\n                if (value && !init) {\n                    deregister();\n                }\n                init = true;\n                dateService = new DatePickerService(scope.event.dates);\n                scope.unsetDate = function(date){\n                    dateService.removeDate(date);\n                }\n            });\n        }\n    }\n})\n.directive('timePicker', function($timeout){\n    return {\n        scope : {\n            model : '=ngModel'\n        },\n        require : 'ngModel',\n        link : function(scope, el, attrs, ngModel){\n            ngModel.$viewChangeListeners.push(function(){\n                scope.model = ngModel.$modelValue;\n            });\n\n            ngModel.$parsers.push(function (value) {\n                if (!value) return;\n                return Date.parse(value);\n            });\n\n            ngModel.$validators.time = function(modelValue, viewValue){\n                if (ngModel.$isEmpty(modelValue)) return true;\n                var time = Date.parse(modelValue);\n                if (time) {\n                    ngModel.$setViewValue(time.toString(\"hh:mm tt\"));\n                    ngModel.$render();\n                    return true;\n                }\n                return false;\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.directive('poll', function($timeout, Participant, ConfirmModal, Communicator){\n    return {\n        restrict : 'A',\n        templateUrl : 'templates/directives/poll.html',\n        $scope : {\n            'event' : '='\n        },\n        controllerAs : 'pollCtrl',\n        controller : function($scope, $rootScope){\n            $scope.defaults = [];\n            $scope.participant = {};\n            $rootScope.$on('add:comment', function(e, event, comment){\n                // Don't repopulate field if user has already voted\n                if (!$scope.didVote) {\n                    $scope.participant.name = comment.author.name;\n                }\n            });\n            this.delete = function(participant){\n                var modal = new ConfirmModal({\n                    title : 'Delete ' + participant.name + '?',\n                    message : 'Are you sure you want to remove '+participant.name+' from the poll?',\n                    confirmText : 'Yes - delete',\n                    cancelText : 'No - nevermind',\n                    isDestructive : true,\n                    confirm : function(){\n                        Participant.remove({ id : $scope.event._id , pid : participant._id }, function(event){\n                            $scope.event = event;\n                            Communicator.trigger('delete:participant', event);\n                        });\n                    }\n                });\n            }\n            this.update = function(participant){\n                Participant.update({\n                    id : $scope.event._id,\n                    pid : participant._id\n                }, participant);\n            }\n            this.edit = function(participant){\n                $scope.defaults[$scope.event.participants.indexOf(participant)] = angular.copy(participant);\n            }\n            this.cancel = function(index){\n                $scope.event.participants[index] = $scope.defaults[index];\n            }\n            this.save = function(){\n                if ($scope.formnew.$valid){\n                    var participant = new Participant($scope.participant);\n                    participant.$save({id:$scope.event._id}, function(event){\n                        $scope.event = event;\n                        $scope.didVote = true;\n                        Communicator.trigger('add:participant', event, $scope.participant);\n                        $scope.participant = {};\n                    });\n                    $scope.formnew.$setPristine();\n                }\n            }\n        },\n        link : function(scope, el, attrs, discussionCtrl){\n            var datesCount = [];\n\n            scope.event.$promise.then(function(event){\n                var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n                var examples = [];\n                for (var i = 0; i < examplesNames.length; i++){\n                    var example = { name : examplesNames[i] };\n                    example.votes = [];\n                    for (var j = 0; j <  event.dates.length; j++){\n                        var answer = Math.random()<.5;\n                        example.votes[j] = answer;\n                    }\n                    examples.push(example);\n                }\n                scope.examples = examples;\n            })\n\n            scope.isTopDate = function(index){\n                var count = datesCount[index];\n                for (var i = 0; i < datesCount.length; i++){\n                    if (datesCount[i] > count) return false;\n                }\n                return true;\n            }\n\n            scope.selectedDate = function(index){\n                datesCount[index] = 0;\n                for (var i = 0; i < scope.event.participants.length; i++){\n                    if (scope.event.participants[i].votes[index]) datesCount[index]++;\n                }\n                return datesCount[index];\n            }\n        }\n    }\n});\n","angular.module('rallly')\n.controller('AboutCtrl', function(Title){\n    Title.set('About Rallly')\n});\n","angular.module('rallly')\n.controller('AccountCtrl', function($scope, ConfirmModal){\n    $scope.showNotice = function(){\n        \n    }\n})\n","angular.module('rallly')\n.controller('EditEventCtrl', function($scope, $http, $state, $timeout, Event, ConfirmModal, Notification, Title){\n    var id = $state.params.id\n    $scope.event = Event.get({id:id}, function(data){\n        Title.set(\"Edit: \" + $scope.event.title);\n        $scope.master = angular.copy($scope.event);\n    }, function(e){\n        $state.go('notfound');\n    });\n    $scope.$watch('event.isDeleted', function(value){\n        if (value){\n            $state.go('deletedevent');\n        }\n    });\n    $scope.undoChanges = function(){\n        $scope.event = angular.copy($scope.master);\n    }\n    $scope.didChange = function(){\n        return JSON.stringify($scope.master) != JSON.stringify($scope.event);\n    }\n    $scope.didChangeDates = function(){\n        return JSON.stringify($scope.master.dates) != JSON.stringify($scope.event.dates);\n    }\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            if ($scope.didChangeDates() ){\n                var modal = new ConfirmModal({\n                    title : 'Hold up!',\n                    message : 'Changing the dates will reset all entries by the participants. Are you sure you want to do that?',\n                    confirmText : 'Yes, I\\'m sure',\n                    isDestructive : true,\n                    confirm : function(){\n                        $scope.event.participants = [];\n                        update();\n                    }\n                });\n\n            } else {\n                update();\n            }\n        } else {\n            var notification = new Notification({\n                title : 'Not so fast',\n                message : 'Make sure you fill in all the required fields and try again.',\n                type : 'error'\n            });\n        }\n    }\n    var update = function(){\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var notification = new Notification({\n                title : 'Changes Saved',\n                message : 'Your changes have been saved successfully.',\n                type : 'success'\n            });\n            $scope.master = angular.copy($scope.event);\n        });\n    }\n});\n","angular.module('rallly')\n.controller('EventCtrl', function($scope, $http, $state, Title, Event, ConfirmModal, Communicator){\n\n    var id = $state.params.id;\n    // Get Event\n    $scope.event = Event.get({id:id}, function(data){\n        // Set the page title to the event title\n        if (data.isDeleted) {\n            $state.go('deletedevent');\n            return;\n        }\n        \n        Communicator.trigger('view:event', data);\n\n        Title.set($scope.event.title);\n        // Generate event url - i.e. http://rallly.co/jF9F_Fd\n        $scope.eventUrl = $state.href('event', {\n            id: $scope.event._id\n        }, {\n            absolute : true\n        });\n    }, function(e){\n        $state.go('notfound');\n    });\n\n    $scope.openEvent = function(){\n        $scope.event.isClosed = false;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Open',\n                message : 'People can vote and comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.closeEvent = function(){\n        $scope.event.isClosed = true;\n        Event.update({\n            id : id\n        }, $scope.event,\n        function(){\n            var modal = new ConfirmModal({\n                title : 'Event Closed',\n                message : 'People can no longer vote or comment on this event.',\n                cancelText : 'OK',\n            });\n        });\n    }\n\n    $scope.editEvent = function(){\n        $state.go('editevent', { id : $scope.event._id });\n    }\n\n});\n","angular.module('rallly')\n.controller('ExampleCtrl', function($state, Event){\n    // Generate dates\n\n    var dates = [], date = new Date();\n    for (var i = 0; i < 4; i++){\n        dates.push(date.add(Math.ceil(Math.random() * 5)).days().toISOString());\n    }\n    // Generate Participants\n    var examplesNames = ['John Example', 'Jane Specimen','Mark Instance', 'Mary Case'];\n    var examples = [];\n    for (var i = 0; i < examplesNames.length; i++){\n        var example = { name : examplesNames[i] };\n        example.votes = [];\n        for (var j = 0; j <  dates.length; j++){\n            var answer = Math.random()<.5;\n            example.votes[j] = answer;\n        }\n        examples.push(example);\n    }\n    var event =  new Event({\n        \"creator\": {\n         \"name\": \"John Example\",\n         \"email\": \"rallly@lukevella.com\",\n         \"allowNotifications\" : false\n        },\n        \"title\": \"Lunch Meeting\",\n        \"location\": \"Starbucks, 901 New York Avenue\",\n        \"description\": \"This event has been automatically generated just for you! Feel free to try out all the different features and when you're ready, you can schedule a new event.\",\n        \"dates\" : dates,\n        \"participants\" : examples,\n        \"emails\": [],\n        \"comments\" : [{\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Hey guys, this is a comment!\"\n        }, {\n            author : {\n                name : \"Mark Instance\"\n            },\n            content : \"Hi John... nice comment. Keep up the great work!\"\n        }, {\n            author : {\n                name : \"John Example\"\n            },\n            content : \"Thank you!\"\n        }],\n        \"isExample\" : true\n    });\n    event.$save(function(data){\n        $state.go('event', { id : data._id }, {\n            location : \"replace\"\n        });\n    })\n});\n","angular.module('rallly')\n.controller('HomeCtrl', function($scope, $state, Title){\n    Title.set('Rallly - Collaborative Scheduling')\n\n    $scope.newEvent = function(){\n        $state.go('newevent');\n    }\n});\n","angular.module('rallly')\n.controller('NavigationCtrl', function($scope, $rootScope, $location, $document){\n    $scope.isActive = function(path) {\n        if ($location.path() == path) {\n            return true;\n        } else {\n            return false\n        }\n    }\n\n\n\n    var clickHandler = function(event){\n        var isClickedElementChildOfPopup = angular.element('.mobile-navigation').find(event.target).length > 0;\n        console.log(isClickedElementChildOfPopup);\n        if (isClickedElementChildOfPopup) return;\n        $scope.toggleMenu()\n    }\n\n    $rootScope.$on('$stateChangeSuccess', function(){\n        angular.element('body').removeClass('open-menu');\n        $document.unbind('click', clickHandler);\n    });\n\n    $scope.toggleMenu = function(){\n        console.log('click');\n        var isOpen = angular.element('body').hasClass('open-menu');\n        if (isOpen) {\n            angular.element('body').removeClass('open-menu');\n            $document.unbind('click', clickHandler);\n        } else {\n            angular.element('body').addClass('open-menu');\n            $document.bind('click', clickHandler);\n        }\n    }\n\n\n})\n","angular.module('rallly')\n.controller('NewEventCtrl', function($scope, $http, $state, Event, ConfirmModal, Notification, Communicator){\n\n    $scope.title = \"Schedule a New Event\";\n    $scope.description = \"Fill in the form below to create your event and share it with your friends and colleagues.\";\n    $scope.event = { creator : {\n        allowNotifications : true\n    }};\n\n\n    $scope.submit = function(){\n        if ($scope.form.$valid){\n            var newEvent = new Event($scope.event);\n            newEvent.$save()\n            .then(function(event){\n                $scope.event = event;\n                $scope.eventUrl = $state.href('event', {\n                    id: $scope.event._id\n                }, {\n                    absolute : true\n                });\n                Communicator.trigger('add:event', event);\n                $state.go('newevent.success');\n            }, function(){\n                var modal = new ConfirmModal({\n                    title : 'Uh oh!',\n                    message : 'There was an error creating your event. Please try again later.',\n                    cancelText : 'OK'\n                });\n            });\n        } else {\n            var notification = new Notification({\n                title : 'Hold on!',\n                message : 'Make sure you fill in all the required fields and that your data is correct.'\n            });\n        }\n    }\n\n});\n","angular.module('rallly')\n.controller('VerificationCtrl', function(Event, Notification, $state){\n    Event.verify({id : $state.params.id, code :$state.params.code}, function(){\n        var notification = new Notification({\n            title : 'Email Verified',\n            message : 'Your email has been verified. You will now be able to receive email notifications for this event',\n            type : 'success',\n            timeout : 5000\n        });\n    }, function(e){\n        var notification = new Notification({\n            title : 'Verification Failed',\n            message : 'Your verification code has expired.',\n            type : 'error'\n        });\n    });\n    $state.go('event', { id : $state.params.id }, {\n        location : \"replace\"\n    });\n\n});\n","angular.module('rallly')\n.factory('Communicator', function($rootScope){\n    return new (function(){\n        this.trigger = function(){\n            $rootScope.$emit.apply($rootScope, arguments);\n        }\n        $rootScope.$on('view:event',function(e, data){\n            mixpanel.track('View Event', {\n                id : data._id,\n                participants : data.participants.length,\n                comments  : data.comments.length,\n                isExample : data.isExample,\n                dates : data.dates.length\n            });\n        })\n\n        $rootScope.$on('add:participant', function(e, event, participant){\n            mixpanel.track('Add Participant', {\n                id : event._id\n            })\n        })\n\n        $rootScope.$on('add:comment', function(e, event, comment){\n            mixpanel.track('Add Comment', {\n                id : event._id\n            })\n        })\n\n        $rootScope.$on('add:event', function(e, data){\n            mixpanel.track('Add Event', {\n                id : data._id,\n                participants : data.participants.length,\n                comments  : data.comments.length,\n                isExample : data.isExample,\n                dates : data.dates.length\n            })\n        })\n\n    })();\n});\n","angular.module('rallly')\n.factory('ConfirmModal', function(btfModal){\n\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/confirmmodal.html',\n            controllerAs : 'modal',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.confirm = (config.confirm) ? function(){config.confirm(); modal.deactivate()} : false;\n                this.cancel = modal.deactivate;\n                this.confirmText = config.confirmText || 'Confirm';\n                this.cancelText = config.cancelText || 'Cancel';\n                this.isDestructive = config.isDestructive;\n            }\n        });\n        modal.activate();\n        \n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n","angular.module('rallly')\n.factory('Notification', function($timeout, btfModal){\n    return function(config){\n        var modal;\n        modal = btfModal({\n            templateUrl : 'templates/notification.html',\n            controllerAs : 'notification',\n            controller : function(){\n                this.title = config.title\n                this.message = config.message;\n                this.close = modal.deactivate;\n                this.type = config.type;\n                var timeout = config.timeout || 5000;\n                $timeout(modal.deactivate, timeout);\n            }\n        });\n        modal.activate();\n\n        this.destroy = function(){\n            modal.deactivate();\n        }\n    }\n});\n"],"sourceRoot":"/source/"}