angular.module("rallly",["ui.router","ngResource","ngFx"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",function(t,e,n){n.html5Mode(!0),e.otherwise("/notfound"),t.state("index",{url:"/",templateUrl:"templates/new.html",controller:"NewEventCtrl"}).state("about",{url:"/about",templateUrl:"templates/about.html"}).state("notfound",{url:"/notfound",templateUrl:"templates/notfound.html"}).state("event",{url:"/:id",templateUrl:"templates/event.html",controller:"EventCtrl"})}]).factory("Event",["$resource",function(t){return t("/api/event/:id",{id:"@_id"},{update:{method:"PUT"}})}]).factory("Participant",["$resource",function(t){return t("/api/event/:id/participant/:pid",{id:"@_id",pid:"@pid"},{update:{method:"PUT"}})}]),angular.module("rallly").controller("EventCtrl",["$scope","$http","$state","Event","Participant",function(t,e,n,r,i){$(".nav-link").removeClass("active");var a=n.params.id;t.event=r.get({id:a},function(){},function(){n.go("notfound")}),t.delete=function(e){confirm("Are you sure you want to remove "+e.name+"?")&&i.remove({id:a,pid:e._id},function(e){t.event=e})},t.defaults=[],t.update=function(e){i.update({id:t.event._id,pid:e._id},e)},t.edit=function(e){t.defaults[t.event.participants.indexOf(e)]=angular.copy(e)},t.cancel=function(e){t.event.participants[e]=t.defaults[e]},t.save=function(e){var e=new i(e);e.$save({id:a},function(e){t.event=e,t.participant={}})}}]),angular.module("rallly").controller("NewEventCtrl",["$scope","$http","$state",function(t,e,n){$(".nav-link[href='/']").addClass("active"),t.event={},t.isNewEvent=!0,t.submit=function(){e.post("/api/event",t.event).success(function(e){t.event=e,t.eventUrl=n.href("event",{id:t.event._id},{absolute:!0})}).error(function(e){t.errors=e.errors})},t.clearDates=null}]).directive("datepicker",function(){return{restrict:"A",require:"ngModel",link:function(t,e,n,r){$(e).datepicker({multidate:!0,todayHighlight:!0,format:"dd/mm/yyyy"}).on("changeDate",function(t){var e=t.dates;e.sort(function(t,e){return t.getTime()>e.getTime()?!0:!1}),r.$setViewValue(e,t)}),t.clearDates=function(){$(e).datepicker("setDate",null)},t.unsetDate=function(n){$(e).datepicker("setDates",t.event.dates.filter(function(t){return t!=n}))}}}});
//# sourceMappingURL=data:application/json;base64,